// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: hypurr/evm_service.proto

package hypurr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ERC20TokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ERC20TokenRequest) Reset() {
	*x = ERC20TokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TokenRequest) ProtoMessage() {}

func (x *ERC20TokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TokenRequest.ProtoReflect.Descriptor instead.
func (*ERC20TokenRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{0}
}

func (x *ERC20TokenRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ERC20TokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *ERC20Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ERC20TokenResponse) Reset() {
	*x = ERC20TokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TokenResponse) ProtoMessage() {}

func (x *ERC20TokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TokenResponse.ProtoReflect.Descriptor instead.
func (*ERC20TokenResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{1}
}

func (x *ERC20TokenResponse) GetToken() *ERC20Token {
	if x != nil {
		return x.Token
	}
	return nil
}

type ERC20TokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ERC20TokensRequest) Reset() {
	*x = ERC20TokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TokensRequest) ProtoMessage() {}

func (x *ERC20TokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TokensRequest.ProtoReflect.Descriptor instead.
func (*ERC20TokensRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{2}
}

func (x *ERC20TokensRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ERC20TokensRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ERC20TokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens        []*ERC20Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	NextPageToken string        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ERC20TokensResponse) Reset() {
	*x = ERC20TokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TokensResponse) ProtoMessage() {}

func (x *ERC20TokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TokensResponse.ProtoReflect.Descriptor instead.
func (*ERC20TokensResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{3}
}

func (x *ERC20TokensResponse) GetTokens() []*ERC20Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *ERC20TokensResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UniV2PairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UniV2PairRequest) Reset() {
	*x = UniV2PairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2PairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2PairRequest) ProtoMessage() {}

func (x *UniV2PairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2PairRequest.ProtoReflect.Descriptor instead.
func (*UniV2PairRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{4}
}

func (x *UniV2PairRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type UniV2PairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair *UniV2Pair `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *UniV2PairResponse) Reset() {
	*x = UniV2PairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2PairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2PairResponse) ProtoMessage() {}

func (x *UniV2PairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2PairResponse.ProtoReflect.Descriptor instead.
func (*UniV2PairResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{5}
}

func (x *UniV2PairResponse) GetPair() *UniV2Pair {
	if x != nil {
		return x.Pair
	}
	return nil
}

type UniV2PairsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize  int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *UniV2PairsRequest) Reset() {
	*x = UniV2PairsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2PairsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2PairsRequest) ProtoMessage() {}

func (x *UniV2PairsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2PairsRequest.ProtoReflect.Descriptor instead.
func (*UniV2PairsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{6}
}

func (x *UniV2PairsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UniV2PairsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type UniV2PairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs         []*UniV2Pair `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	NextPageToken string       `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *UniV2PairsResponse) Reset() {
	*x = UniV2PairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2PairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2PairsResponse) ProtoMessage() {}

func (x *UniV2PairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2PairsResponse.ProtoReflect.Descriptor instead.
func (*UniV2PairsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{7}
}

func (x *UniV2PairsResponse) GetPairs() []*UniV2Pair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *UniV2PairsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UniV2SwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UniV2SwapRequest) Reset() {
	*x = UniV2SwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2SwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2SwapRequest) ProtoMessage() {}

func (x *UniV2SwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2SwapRequest.ProtoReflect.Descriptor instead.
func (*UniV2SwapRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{8}
}

func (x *UniV2SwapRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UniV2SwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swap *UniV2Swap `protobuf:"bytes,1,opt,name=swap,proto3" json:"swap,omitempty"`
}

func (x *UniV2SwapResponse) Reset() {
	*x = UniV2SwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2SwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2SwapResponse) ProtoMessage() {}

func (x *UniV2SwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2SwapResponse.ProtoReflect.Descriptor instead.
func (*UniV2SwapResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{9}
}

func (x *UniV2SwapResponse) GetSwap() *UniV2Swap {
	if x != nil {
		return x.Swap
	}
	return nil
}

type UniV2SwapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize        int32   `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken       string  `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PairAddress     *string `protobuf:"bytes,3,opt,name=pair_address,json=pairAddress,proto3,oneof" json:"pair_address,omitempty"`
	SenderAddress   *string `protobuf:"bytes,4,opt,name=sender_address,json=senderAddress,proto3,oneof" json:"sender_address,omitempty"`
	ReceiverAddress *string `protobuf:"bytes,5,opt,name=receiver_address,json=receiverAddress,proto3,oneof" json:"receiver_address,omitempty"`
}

func (x *UniV2SwapsRequest) Reset() {
	*x = UniV2SwapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2SwapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2SwapsRequest) ProtoMessage() {}

func (x *UniV2SwapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2SwapsRequest.ProtoReflect.Descriptor instead.
func (*UniV2SwapsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{10}
}

func (x *UniV2SwapsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UniV2SwapsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *UniV2SwapsRequest) GetPairAddress() string {
	if x != nil && x.PairAddress != nil {
		return *x.PairAddress
	}
	return ""
}

func (x *UniV2SwapsRequest) GetSenderAddress() string {
	if x != nil && x.SenderAddress != nil {
		return *x.SenderAddress
	}
	return ""
}

func (x *UniV2SwapsRequest) GetReceiverAddress() string {
	if x != nil && x.ReceiverAddress != nil {
		return *x.ReceiverAddress
	}
	return ""
}

type UniV2SwapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Swaps         []*UniV2Swap `protobuf:"bytes,1,rep,name=swaps,proto3" json:"swaps,omitempty"`
	NextPageToken string       `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *UniV2SwapsResponse) Reset() {
	*x = UniV2SwapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2SwapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2SwapsResponse) ProtoMessage() {}

func (x *UniV2SwapsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2SwapsResponse.ProtoReflect.Descriptor instead.
func (*UniV2SwapsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{11}
}

func (x *UniV2SwapsResponse) GetSwaps() []*UniV2Swap {
	if x != nil {
		return x.Swaps
	}
	return nil
}

func (x *UniV2SwapsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ERC20TransferEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize     int32   `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken    string  `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	TokenAddress *string `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3,oneof" json:"token_address,omitempty"`
	FromAddress  *string `protobuf:"bytes,4,opt,name=from_address,json=fromAddress,proto3,oneof" json:"from_address,omitempty"`
	ToAddress    *string `protobuf:"bytes,5,opt,name=to_address,json=toAddress,proto3,oneof" json:"to_address,omitempty"`
}

func (x *ERC20TransferEventsRequest) Reset() {
	*x = ERC20TransferEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TransferEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TransferEventsRequest) ProtoMessage() {}

func (x *ERC20TransferEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TransferEventsRequest.ProtoReflect.Descriptor instead.
func (*ERC20TransferEventsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{12}
}

func (x *ERC20TransferEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ERC20TransferEventsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ERC20TransferEventsRequest) GetTokenAddress() string {
	if x != nil && x.TokenAddress != nil {
		return *x.TokenAddress
	}
	return ""
}

func (x *ERC20TransferEventsRequest) GetFromAddress() string {
	if x != nil && x.FromAddress != nil {
		return *x.FromAddress
	}
	return ""
}

func (x *ERC20TransferEventsRequest) GetToAddress() string {
	if x != nil && x.ToAddress != nil {
		return *x.ToAddress
	}
	return ""
}

type ERC20TransferEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events        []*ERC20TransferEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextPageToken string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ERC20TransferEventsResponse) Reset() {
	*x = ERC20TransferEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20TransferEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20TransferEventsResponse) ProtoMessage() {}

func (x *ERC20TransferEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20TransferEventsResponse.ProtoReflect.Descriptor instead.
func (*ERC20TransferEventsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{13}
}

func (x *ERC20TransferEventsResponse) GetEvents() []*ERC20TransferEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ERC20TransferEventsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ERC20ApprovalEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize       int32   `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken      string  `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	TokenAddress   *string `protobuf:"bytes,3,opt,name=token_address,json=tokenAddress,proto3,oneof" json:"token_address,omitempty"`
	OwnerAddress   *string `protobuf:"bytes,4,opt,name=owner_address,json=ownerAddress,proto3,oneof" json:"owner_address,omitempty"`
	SpenderAddress *string `protobuf:"bytes,5,opt,name=spender_address,json=spenderAddress,proto3,oneof" json:"spender_address,omitempty"`
}

func (x *ERC20ApprovalEventsRequest) Reset() {
	*x = ERC20ApprovalEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20ApprovalEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20ApprovalEventsRequest) ProtoMessage() {}

func (x *ERC20ApprovalEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20ApprovalEventsRequest.ProtoReflect.Descriptor instead.
func (*ERC20ApprovalEventsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{14}
}

func (x *ERC20ApprovalEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ERC20ApprovalEventsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ERC20ApprovalEventsRequest) GetTokenAddress() string {
	if x != nil && x.TokenAddress != nil {
		return *x.TokenAddress
	}
	return ""
}

func (x *ERC20ApprovalEventsRequest) GetOwnerAddress() string {
	if x != nil && x.OwnerAddress != nil {
		return *x.OwnerAddress
	}
	return ""
}

func (x *ERC20ApprovalEventsRequest) GetSpenderAddress() string {
	if x != nil && x.SpenderAddress != nil {
		return *x.SpenderAddress
	}
	return ""
}

type ERC20ApprovalEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events        []*ERC20ApprovalEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextPageToken string                `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ERC20ApprovalEventsResponse) Reset() {
	*x = ERC20ApprovalEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ERC20ApprovalEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ERC20ApprovalEventsResponse) ProtoMessage() {}

func (x *ERC20ApprovalEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ERC20ApprovalEventsResponse.ProtoReflect.Descriptor instead.
func (*ERC20ApprovalEventsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{15}
}

func (x *ERC20ApprovalEventsResponse) GetEvents() []*ERC20ApprovalEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ERC20ApprovalEventsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type UniV2CandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairAddress   string `protobuf:"bytes,1,opt,name=pair_address,json=pairAddress,proto3" json:"pair_address,omitempty"`
	FromTimestamp int64  `protobuf:"varint,2,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty"`
	ToTimestamp   int64  `protobuf:"varint,3,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty"`
	Interval      string `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"` // e.g. "5m", "1h", "1d"
}

func (x *UniV2CandlesRequest) Reset() {
	*x = UniV2CandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2CandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2CandlesRequest) ProtoMessage() {}

func (x *UniV2CandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2CandlesRequest.ProtoReflect.Descriptor instead.
func (*UniV2CandlesRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{16}
}

func (x *UniV2CandlesRequest) GetPairAddress() string {
	if x != nil {
		return x.PairAddress
	}
	return ""
}

func (x *UniV2CandlesRequest) GetFromTimestamp() int64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *UniV2CandlesRequest) GetToTimestamp() int64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

func (x *UniV2CandlesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type UniV2CandlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candles []*UniV2Candle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
}

func (x *UniV2CandlesResponse) Reset() {
	*x = UniV2CandlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_evm_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniV2CandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniV2CandlesResponse) ProtoMessage() {}

func (x *UniV2CandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_evm_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniV2CandlesResponse.ProtoReflect.Descriptor instead.
func (*UniV2CandlesResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_evm_service_proto_rawDescGZIP(), []int{17}
}

func (x *UniV2CandlesResponse) GetCandles() []*UniV2Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

var File_hypurr_evm_service_proto protoreflect.FileDescriptor

var file_hypurr_evm_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x65, 0x76, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x1a, 0x10, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x65, 0x76, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x11, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x12, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x50, 0x0a, 0x12, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x69, 0x0a, 0x13, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x2c, 0x0a, 0x10, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3a,
	0x0a, 0x11, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22, 0x4f, 0x0a, 0x11, 0x55, 0x6e,
	0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x65, 0x0a, 0x12, 0x55,
	0x6e, 0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x22, 0x0a, 0x10, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53,
	0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x73,
	0x77, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x52, 0x04, 0x73, 0x77,
	0x61, 0x70, 0x22, 0x8c, 0x02, 0x0a, 0x11, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x61,
	0x69, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x61, 0x69,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x65, 0x0a, 0x12, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x52, 0x05, 0x73, 0x77, 0x61, 0x70, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x80, 0x02, 0x0a, 0x1a, 0x45, 0x52, 0x43,
	0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x74, 0x6f, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x79, 0x0a, 0x1b, 0x45,
	0x52, 0x43, 0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x02, 0x0a, 0x1a, 0x45, 0x52, 0x43, 0x32, 0x30,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x0e, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x79, 0x0a, 0x1b, 0x45,
	0x52, 0x43, 0x32, 0x30, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x55, 0x6e, 0x69, 0x56, 0x32,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x69, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x45, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x56, 0x32,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x32, 0xbd,
	0x05, 0x0a, 0x03, 0x45, 0x56, 0x4d, 0x12, 0x45, 0x0a, 0x0a, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x45, 0x52,
	0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0b, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x1a, 0x2e, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x56, 0x32,
	0x50, 0x61, 0x69, 0x72, 0x12, 0x18, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e,
	0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x55,
	0x6e, 0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e,
	0x69, 0x56, 0x32, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x12,
	0x18, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53,
	0x77, 0x61, 0x70, 0x73, 0x12, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e,
	0x69, 0x56, 0x32, 0x53, 0x77, 0x61, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x53, 0x77,
	0x61, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x13, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x45, 0x52,
	0x43, 0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x60, 0x0a, 0x13, 0x45, 0x52, 0x43, 0x32, 0x30, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x45, 0x52, 0x43, 0x32, 0x30, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x45, 0x52, 0x43, 0x32, 0x30, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x73, 0x12, 0x1b, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x56, 0x32, 0x43, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29,
	0x5a, 0x27, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x67, 0x6f, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_hypurr_evm_service_proto_rawDescOnce sync.Once
	file_hypurr_evm_service_proto_rawDescData = file_hypurr_evm_service_proto_rawDesc
)

func file_hypurr_evm_service_proto_rawDescGZIP() []byte {
	file_hypurr_evm_service_proto_rawDescOnce.Do(func() {
		file_hypurr_evm_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_hypurr_evm_service_proto_rawDescData)
	})
	return file_hypurr_evm_service_proto_rawDescData
}

var file_hypurr_evm_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_hypurr_evm_service_proto_goTypes = []any{
	(*ERC20TokenRequest)(nil),           // 0: hypurr.ERC20TokenRequest
	(*ERC20TokenResponse)(nil),          // 1: hypurr.ERC20TokenResponse
	(*ERC20TokensRequest)(nil),          // 2: hypurr.ERC20TokensRequest
	(*ERC20TokensResponse)(nil),         // 3: hypurr.ERC20TokensResponse
	(*UniV2PairRequest)(nil),            // 4: hypurr.UniV2PairRequest
	(*UniV2PairResponse)(nil),           // 5: hypurr.UniV2PairResponse
	(*UniV2PairsRequest)(nil),           // 6: hypurr.UniV2PairsRequest
	(*UniV2PairsResponse)(nil),          // 7: hypurr.UniV2PairsResponse
	(*UniV2SwapRequest)(nil),            // 8: hypurr.UniV2SwapRequest
	(*UniV2SwapResponse)(nil),           // 9: hypurr.UniV2SwapResponse
	(*UniV2SwapsRequest)(nil),           // 10: hypurr.UniV2SwapsRequest
	(*UniV2SwapsResponse)(nil),          // 11: hypurr.UniV2SwapsResponse
	(*ERC20TransferEventsRequest)(nil),  // 12: hypurr.ERC20TransferEventsRequest
	(*ERC20TransferEventsResponse)(nil), // 13: hypurr.ERC20TransferEventsResponse
	(*ERC20ApprovalEventsRequest)(nil),  // 14: hypurr.ERC20ApprovalEventsRequest
	(*ERC20ApprovalEventsResponse)(nil), // 15: hypurr.ERC20ApprovalEventsResponse
	(*UniV2CandlesRequest)(nil),         // 16: hypurr.UniV2CandlesRequest
	(*UniV2CandlesResponse)(nil),        // 17: hypurr.UniV2CandlesResponse
	(*ERC20Token)(nil),                  // 18: hypurr.ERC20Token
	(*UniV2Pair)(nil),                   // 19: hypurr.UniV2Pair
	(*UniV2Swap)(nil),                   // 20: hypurr.UniV2Swap
	(*ERC20TransferEvent)(nil),          // 21: hypurr.ERC20TransferEvent
	(*ERC20ApprovalEvent)(nil),          // 22: hypurr.ERC20ApprovalEvent
	(*UniV2Candle)(nil),                 // 23: hypurr.UniV2Candle
}
var file_hypurr_evm_service_proto_depIdxs = []int32{
	18, // 0: hypurr.ERC20TokenResponse.token:type_name -> hypurr.ERC20Token
	18, // 1: hypurr.ERC20TokensResponse.tokens:type_name -> hypurr.ERC20Token
	19, // 2: hypurr.UniV2PairResponse.pair:type_name -> hypurr.UniV2Pair
	19, // 3: hypurr.UniV2PairsResponse.pairs:type_name -> hypurr.UniV2Pair
	20, // 4: hypurr.UniV2SwapResponse.swap:type_name -> hypurr.UniV2Swap
	20, // 5: hypurr.UniV2SwapsResponse.swaps:type_name -> hypurr.UniV2Swap
	21, // 6: hypurr.ERC20TransferEventsResponse.events:type_name -> hypurr.ERC20TransferEvent
	22, // 7: hypurr.ERC20ApprovalEventsResponse.events:type_name -> hypurr.ERC20ApprovalEvent
	23, // 8: hypurr.UniV2CandlesResponse.candles:type_name -> hypurr.UniV2Candle
	0,  // 9: hypurr.EVM.ERC20Token:input_type -> hypurr.ERC20TokenRequest
	2,  // 10: hypurr.EVM.ERC20Tokens:input_type -> hypurr.ERC20TokensRequest
	4,  // 11: hypurr.EVM.UniV2Pair:input_type -> hypurr.UniV2PairRequest
	6,  // 12: hypurr.EVM.UniV2Pairs:input_type -> hypurr.UniV2PairsRequest
	8,  // 13: hypurr.EVM.UniV2Swap:input_type -> hypurr.UniV2SwapRequest
	10, // 14: hypurr.EVM.UniV2Swaps:input_type -> hypurr.UniV2SwapsRequest
	12, // 15: hypurr.EVM.ERC20TransferEvents:input_type -> hypurr.ERC20TransferEventsRequest
	14, // 16: hypurr.EVM.ERC20ApprovalEvents:input_type -> hypurr.ERC20ApprovalEventsRequest
	16, // 17: hypurr.EVM.UniV2Candles:input_type -> hypurr.UniV2CandlesRequest
	1,  // 18: hypurr.EVM.ERC20Token:output_type -> hypurr.ERC20TokenResponse
	3,  // 19: hypurr.EVM.ERC20Tokens:output_type -> hypurr.ERC20TokensResponse
	5,  // 20: hypurr.EVM.UniV2Pair:output_type -> hypurr.UniV2PairResponse
	7,  // 21: hypurr.EVM.UniV2Pairs:output_type -> hypurr.UniV2PairsResponse
	9,  // 22: hypurr.EVM.UniV2Swap:output_type -> hypurr.UniV2SwapResponse
	11, // 23: hypurr.EVM.UniV2Swaps:output_type -> hypurr.UniV2SwapsResponse
	13, // 24: hypurr.EVM.ERC20TransferEvents:output_type -> hypurr.ERC20TransferEventsResponse
	15, // 25: hypurr.EVM.ERC20ApprovalEvents:output_type -> hypurr.ERC20ApprovalEventsResponse
	17, // 26: hypurr.EVM.UniV2Candles:output_type -> hypurr.UniV2CandlesResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_hypurr_evm_service_proto_init() }
func file_hypurr_evm_service_proto_init() {
	if File_hypurr_evm_service_proto != nil {
		return
	}
	file_hypurr_evm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hypurr_evm_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20TokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20TokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20TokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20TokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2PairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2PairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2PairsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2PairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2SwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2SwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2SwapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2SwapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20TransferEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20TransferEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20ApprovalEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ERC20ApprovalEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2CandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_evm_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UniV2CandlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hypurr_evm_service_proto_msgTypes[10].OneofWrappers = []any{}
	file_hypurr_evm_service_proto_msgTypes[12].OneofWrappers = []any{}
	file_hypurr_evm_service_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hypurr_evm_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hypurr_evm_service_proto_goTypes,
		DependencyIndexes: file_hypurr_evm_service_proto_depIdxs,
		MessageInfos:      file_hypurr_evm_service_proto_msgTypes,
	}.Build()
	File_hypurr_evm_service_proto = out.File
	file_hypurr_evm_service_proto_rawDesc = nil
	file_hypurr_evm_service_proto_goTypes = nil
	file_hypurr_evm_service_proto_depIdxs = nil
}
