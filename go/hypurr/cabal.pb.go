// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: hypurr/cabal.proto

package hypurr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CABALS
type HypurrFunCabal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramChatId int64                          `protobuf:"varint,1,opt,name=telegram_chat_id,json=telegramChatId,proto3" json:"telegram_chat_id,omitempty"`
	Name           string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PictureFileId  string                         `protobuf:"bytes,3,opt,name=picture_file_id,json=pictureFileId,proto3" json:"picture_file_id,omitempty"`
	Users          []*HypurrFunCabalUser          `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	TrackedWallets []*HypurrFunCabalTrackedWallet `protobuf:"bytes,5,rep,name=tracked_wallets,json=trackedWallets,proto3" json:"tracked_wallets,omitempty"`
	UserSeasons    []*HypurrFunCabalUserSeason    `protobuf:"bytes,6,rep,name=user_seasons,json=userSeasons,proto3" json:"user_seasons,omitempty"`
	Summary        *HypurrFunCabalSummary         `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *HypurrFunCabal) Reset() {
	*x = HypurrFunCabal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabal) ProtoMessage() {}

func (x *HypurrFunCabal) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabal.ProtoReflect.Descriptor instead.
func (*HypurrFunCabal) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{0}
}

func (x *HypurrFunCabal) GetTelegramChatId() int64 {
	if x != nil {
		return x.TelegramChatId
	}
	return 0
}

func (x *HypurrFunCabal) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HypurrFunCabal) GetPictureFileId() string {
	if x != nil {
		return x.PictureFileId
	}
	return ""
}

func (x *HypurrFunCabal) GetUsers() []*HypurrFunCabalUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *HypurrFunCabal) GetTrackedWallets() []*HypurrFunCabalTrackedWallet {
	if x != nil {
		return x.TrackedWallets
	}
	return nil
}

func (x *HypurrFunCabal) GetUserSeasons() []*HypurrFunCabalUserSeason {
	if x != nil {
		return x.UserSeasons
	}
	return nil
}

func (x *HypurrFunCabal) GetSummary() *HypurrFunCabalSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type HypurrFunCabalSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserCount       int64   `protobuf:"varint,1,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	SeasonSpotPnl   float64 `protobuf:"fixed64,2,opt,name=season_spot_pnl,json=seasonSpotPnl,proto3" json:"season_spot_pnl,omitempty"`
	SeasonPerpPnl   float64 `protobuf:"fixed64,3,opt,name=season_perp_pnl,json=seasonPerpPnl,proto3" json:"season_perp_pnl,omitempty"`
	SeasonLaunchPnl float64 `protobuf:"fixed64,4,opt,name=season_launch_pnl,json=seasonLaunchPnl,proto3" json:"season_launch_pnl,omitempty"`
}

func (x *HypurrFunCabalSummary) Reset() {
	*x = HypurrFunCabalSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalSummary) ProtoMessage() {}

func (x *HypurrFunCabalSummary) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalSummary.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalSummary) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{1}
}

func (x *HypurrFunCabalSummary) GetUserCount() int64 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *HypurrFunCabalSummary) GetSeasonSpotPnl() float64 {
	if x != nil {
		return x.SeasonSpotPnl
	}
	return 0
}

func (x *HypurrFunCabalSummary) GetSeasonPerpPnl() float64 {
	if x != nil {
		return x.SeasonPerpPnl
	}
	return 0
}

func (x *HypurrFunCabalSummary) GetSeasonLaunchPnl() float64 {
	if x != nil {
		return x.SeasonLaunchPnl
	}
	return 0
}

type HypurrFunCabalUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramChatId int64              `protobuf:"varint,1,opt,name=telegram_chat_id,json=telegramChatId,proto3" json:"telegram_chat_id,omitempty"`
	TelegramId     int64              `protobuf:"varint,2,opt,name=telegram_id,json=telegramId,proto3" json:"telegram_id,omitempty"`
	Wallet         *HyperliquidWallet `protobuf:"bytes,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	WalletId       int64              `protobuf:"varint,4,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Name           string             `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	SpotPnl        float64            `protobuf:"fixed64,6,opt,name=spot_pnl,json=spotPnl,proto3" json:"spot_pnl,omitempty"`
	SpotEquity     float64            `protobuf:"fixed64,7,opt,name=spot_equity,json=spotEquity,proto3" json:"spot_equity,omitempty"`
	LaunchPnl      float64            `protobuf:"fixed64,8,opt,name=launch_pnl,json=launchPnl,proto3" json:"launch_pnl,omitempty"`
	LaunchEquity   float64            `protobuf:"fixed64,9,opt,name=launch_equity,json=launchEquity,proto3" json:"launch_equity,omitempty"`
	PerpPnl        float64            `protobuf:"fixed64,10,opt,name=perp_pnl,json=perpPnl,proto3" json:"perp_pnl,omitempty"`
	PerpEquity     float64            `protobuf:"fixed64,11,opt,name=perp_equity,json=perpEquity,proto3" json:"perp_equity,omitempty"`
}

func (x *HypurrFunCabalUser) Reset() {
	*x = HypurrFunCabalUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalUser) ProtoMessage() {}

func (x *HypurrFunCabalUser) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalUser.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalUser) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{2}
}

func (x *HypurrFunCabalUser) GetTelegramChatId() int64 {
	if x != nil {
		return x.TelegramChatId
	}
	return 0
}

func (x *HypurrFunCabalUser) GetTelegramId() int64 {
	if x != nil {
		return x.TelegramId
	}
	return 0
}

func (x *HypurrFunCabalUser) GetWallet() *HyperliquidWallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *HypurrFunCabalUser) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *HypurrFunCabalUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HypurrFunCabalUser) GetSpotPnl() float64 {
	if x != nil {
		return x.SpotPnl
	}
	return 0
}

func (x *HypurrFunCabalUser) GetSpotEquity() float64 {
	if x != nil {
		return x.SpotEquity
	}
	return 0
}

func (x *HypurrFunCabalUser) GetLaunchPnl() float64 {
	if x != nil {
		return x.LaunchPnl
	}
	return 0
}

func (x *HypurrFunCabalUser) GetLaunchEquity() float64 {
	if x != nil {
		return x.LaunchEquity
	}
	return 0
}

func (x *HypurrFunCabalUser) GetPerpPnl() float64 {
	if x != nil {
		return x.PerpPnl
	}
	return 0
}

func (x *HypurrFunCabalUser) GetPerpEquity() float64 {
	if x != nil {
		return x.PerpEquity
	}
	return 0
}

type HypurrFunCabalTrackedWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramChatId int64              `protobuf:"varint,1,opt,name=telegram_chat_id,json=telegramChatId,proto3" json:"telegram_chat_id,omitempty"`
	WalletId       int64              `protobuf:"varint,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Wallet         *HyperliquidWallet `protobuf:"bytes,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Label          string             `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	AlertSpot      bool               `protobuf:"varint,5,opt,name=alert_spot,json=alertSpot,proto3" json:"alert_spot,omitempty"`
	AlertPerp      bool               `protobuf:"varint,6,opt,name=alert_perp,json=alertPerp,proto3" json:"alert_perp,omitempty"`
}

func (x *HypurrFunCabalTrackedWallet) Reset() {
	*x = HypurrFunCabalTrackedWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalTrackedWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalTrackedWallet) ProtoMessage() {}

func (x *HypurrFunCabalTrackedWallet) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalTrackedWallet.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalTrackedWallet) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{3}
}

func (x *HypurrFunCabalTrackedWallet) GetTelegramChatId() int64 {
	if x != nil {
		return x.TelegramChatId
	}
	return 0
}

func (x *HypurrFunCabalTrackedWallet) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *HypurrFunCabalTrackedWallet) GetWallet() *HyperliquidWallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *HypurrFunCabalTrackedWallet) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *HypurrFunCabalTrackedWallet) GetAlertSpot() bool {
	if x != nil {
		return x.AlertSpot
	}
	return false
}

func (x *HypurrFunCabalTrackedWallet) GetAlertPerp() bool {
	if x != nil {
		return x.AlertPerp
	}
	return false
}

type HypurrFunCabalSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime   int64                       `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime     int64                       `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Name        string                      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	UserSeasons []*HypurrFunCabalUserSeason `protobuf:"bytes,5,rep,name=user_seasons,json=userSeasons,proto3" json:"user_seasons,omitempty"`
	WinnerId    *wrapperspb.Int64Value      `protobuf:"bytes,6,opt,name=winner_id,json=winnerId,proto3" json:"winner_id,omitempty"`
	Winner      *HypurrFunCabal             `protobuf:"bytes,7,opt,name=winner,proto3" json:"winner,omitempty"`
}

func (x *HypurrFunCabalSeason) Reset() {
	*x = HypurrFunCabalSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalSeason) ProtoMessage() {}

func (x *HypurrFunCabalSeason) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalSeason.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalSeason) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{4}
}

func (x *HypurrFunCabalSeason) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HypurrFunCabalSeason) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HypurrFunCabalSeason) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *HypurrFunCabalSeason) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HypurrFunCabalSeason) GetUserSeasons() []*HypurrFunCabalUserSeason {
	if x != nil {
		return x.UserSeasons
	}
	return nil
}

func (x *HypurrFunCabalSeason) GetWinnerId() *wrapperspb.Int64Value {
	if x != nil {
		return x.WinnerId
	}
	return nil
}

func (x *HypurrFunCabalSeason) GetWinner() *HypurrFunCabal {
	if x != nil {
		return x.Winner
	}
	return nil
}

type HypurrFunCabalUserSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CabalSeasonId  int64   `protobuf:"varint,1,opt,name=cabal_season_id,json=cabalSeasonId,proto3" json:"cabal_season_id,omitempty"`
	TelegramId     int64   `protobuf:"varint,2,opt,name=telegram_id,json=telegramId,proto3" json:"telegram_id,omitempty"`
	WalletId       int64   `protobuf:"varint,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TelegramChatId int64   `protobuf:"varint,4,opt,name=telegram_chat_id,json=telegramChatId,proto3" json:"telegram_chat_id,omitempty"`
	SpotPnl        float64 `protobuf:"fixed64,5,opt,name=spot_pnl,json=spotPnl,proto3" json:"spot_pnl,omitempty"`
	LaunchPnl      float64 `protobuf:"fixed64,6,opt,name=launch_pnl,json=launchPnl,proto3" json:"launch_pnl,omitempty"`
	PerpPnl        float64 `protobuf:"fixed64,7,opt,name=perp_pnl,json=perpPnl,proto3" json:"perp_pnl,omitempty"`
	LastSpotPnl    float64 `protobuf:"fixed64,8,opt,name=last_spot_pnl,json=lastSpotPnl,proto3" json:"last_spot_pnl,omitempty"`
	LastLaunchPnl  float64 `protobuf:"fixed64,9,opt,name=last_launch_pnl,json=lastLaunchPnl,proto3" json:"last_launch_pnl,omitempty"`
	LastPerpPnl    float64 `protobuf:"fixed64,10,opt,name=last_perp_pnl,json=lastPerpPnl,proto3" json:"last_perp_pnl,omitempty"`
}

func (x *HypurrFunCabalUserSeason) Reset() {
	*x = HypurrFunCabalUserSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalUserSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalUserSeason) ProtoMessage() {}

func (x *HypurrFunCabalUserSeason) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalUserSeason.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalUserSeason) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{5}
}

func (x *HypurrFunCabalUserSeason) GetCabalSeasonId() int64 {
	if x != nil {
		return x.CabalSeasonId
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetTelegramId() int64 {
	if x != nil {
		return x.TelegramId
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetTelegramChatId() int64 {
	if x != nil {
		return x.TelegramChatId
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetSpotPnl() float64 {
	if x != nil {
		return x.SpotPnl
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetLaunchPnl() float64 {
	if x != nil {
		return x.LaunchPnl
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetPerpPnl() float64 {
	if x != nil {
		return x.PerpPnl
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetLastSpotPnl() float64 {
	if x != nil {
		return x.LastSpotPnl
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetLastLaunchPnl() float64 {
	if x != nil {
		return x.LastLaunchPnl
	}
	return 0
}

func (x *HypurrFunCabalUserSeason) GetLastPerpPnl() float64 {
	if x != nil {
		return x.LastPerpPnl
	}
	return 0
}

type HypurrFunCabalPerformance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId        int64   `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	SpotPnl         float64 `protobuf:"fixed64,2,opt,name=spot_pnl,json=spotPnl,proto3" json:"spot_pnl,omitempty"`
	LaunchPnl       float64 `protobuf:"fixed64,3,opt,name=launch_pnl,json=launchPnl,proto3" json:"launch_pnl,omitempty"`
	PerpPnl         float64 `protobuf:"fixed64,4,opt,name=perp_pnl,json=perpPnl,proto3" json:"perp_pnl,omitempty"`
	SeasonStartTime int64   `protobuf:"varint,5,opt,name=season_start_time,json=seasonStartTime,proto3" json:"season_start_time,omitempty"`
	SeasonEndTime   int64   `protobuf:"varint,6,opt,name=season_end_time,json=seasonEndTime,proto3" json:"season_end_time,omitempty"`
}

func (x *HypurrFunCabalPerformance) Reset() {
	*x = HypurrFunCabalPerformance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_cabal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalPerformance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalPerformance) ProtoMessage() {}

func (x *HypurrFunCabalPerformance) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_cabal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalPerformance.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalPerformance) Descriptor() ([]byte, []int) {
	return file_hypurr_cabal_proto_rawDescGZIP(), []int{6}
}

func (x *HypurrFunCabalPerformance) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *HypurrFunCabalPerformance) GetSpotPnl() float64 {
	if x != nil {
		return x.SpotPnl
	}
	return 0
}

func (x *HypurrFunCabalPerformance) GetLaunchPnl() float64 {
	if x != nil {
		return x.LaunchPnl
	}
	return 0
}

func (x *HypurrFunCabalPerformance) GetPerpPnl() float64 {
	if x != nil {
		return x.PerpPnl
	}
	return 0
}

func (x *HypurrFunCabalPerformance) GetSeasonStartTime() int64 {
	if x != nil {
		return x.SeasonStartTime
	}
	return 0
}

func (x *HypurrFunCabalPerformance) GetSeasonEndTime() int64 {
	if x != nil {
		return x.SeasonEndTime
	}
	return 0
}

var File_hypurr_cabal_proto protoreflect.FileDescriptor

var file_hypurr_cabal_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x63, 0x61, 0x62, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x68, 0x79,
	0x70, 0x75, 0x72, 0x72, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf4, 0x02, 0x0a, 0x0e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43,
	0x61, 0x62, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x0f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12,
	0x37, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x15, 0x48, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x6f, 0x74,
	0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x6e, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x70, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x70, 0x50, 0x6e,
	0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6e, 0x6c, 0x22, 0xff, 0x02,
	0x0a, 0x12, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x31, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x70, 0x6e, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x50, 0x6e, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x70, 0x6f, 0x74, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6e, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x45, 0x71, 0x75,
	0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x70, 0x5f, 0x70, 0x6e, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x70, 0x50, 0x6e, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x70, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x70, 0x45, 0x71, 0x75, 0x69, 0x74, 0x79, 0x22,
	0xeb, 0x01, 0x0a, 0x1b, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x70, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x65, 0x72, 0x70, 0x22, 0xa3, 0x02,
	0x0a, 0x14, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x52, 0x06, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x22, 0xef, 0x02, 0x0a, 0x18, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75,
	0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x62, 0x61, 0x6c,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x50, 0x6e, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6e, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65,
	0x72, 0x70, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x70, 0x50, 0x6e, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x70,
	0x6f, 0x74, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x6e, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6e,
	0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x70, 0x5f, 0x70,
	0x6e, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x65,
	0x72, 0x70, 0x50, 0x6e, 0x6c, 0x22, 0xe1, 0x01, 0x0a, 0x19, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x74, 0x50, 0x6e, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6e, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65,
	0x72, 0x70, 0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x70, 0x50, 0x6e, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x68, 0x79,
	0x70, 0x75, 0x72, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hypurr_cabal_proto_rawDescOnce sync.Once
	file_hypurr_cabal_proto_rawDescData = file_hypurr_cabal_proto_rawDesc
)

func file_hypurr_cabal_proto_rawDescGZIP() []byte {
	file_hypurr_cabal_proto_rawDescOnce.Do(func() {
		file_hypurr_cabal_proto_rawDescData = protoimpl.X.CompressGZIP(file_hypurr_cabal_proto_rawDescData)
	})
	return file_hypurr_cabal_proto_rawDescData
}

var file_hypurr_cabal_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_hypurr_cabal_proto_goTypes = []any{
	(*HypurrFunCabal)(nil),              // 0: hypurr.HypurrFunCabal
	(*HypurrFunCabalSummary)(nil),       // 1: hypurr.HypurrFunCabalSummary
	(*HypurrFunCabalUser)(nil),          // 2: hypurr.HypurrFunCabalUser
	(*HypurrFunCabalTrackedWallet)(nil), // 3: hypurr.HypurrFunCabalTrackedWallet
	(*HypurrFunCabalSeason)(nil),        // 4: hypurr.HypurrFunCabalSeason
	(*HypurrFunCabalUserSeason)(nil),    // 5: hypurr.HypurrFunCabalUserSeason
	(*HypurrFunCabalPerformance)(nil),   // 6: hypurr.HypurrFunCabalPerformance
	(*HyperliquidWallet)(nil),           // 7: hypurr.HyperliquidWallet
	(*wrapperspb.Int64Value)(nil),       // 8: google.protobuf.Int64Value
}
var file_hypurr_cabal_proto_depIdxs = []int32{
	2, // 0: hypurr.HypurrFunCabal.users:type_name -> hypurr.HypurrFunCabalUser
	3, // 1: hypurr.HypurrFunCabal.tracked_wallets:type_name -> hypurr.HypurrFunCabalTrackedWallet
	5, // 2: hypurr.HypurrFunCabal.user_seasons:type_name -> hypurr.HypurrFunCabalUserSeason
	1, // 3: hypurr.HypurrFunCabal.summary:type_name -> hypurr.HypurrFunCabalSummary
	7, // 4: hypurr.HypurrFunCabalUser.wallet:type_name -> hypurr.HyperliquidWallet
	7, // 5: hypurr.HypurrFunCabalTrackedWallet.wallet:type_name -> hypurr.HyperliquidWallet
	5, // 6: hypurr.HypurrFunCabalSeason.user_seasons:type_name -> hypurr.HypurrFunCabalUserSeason
	8, // 7: hypurr.HypurrFunCabalSeason.winner_id:type_name -> google.protobuf.Int64Value
	0, // 8: hypurr.HypurrFunCabalSeason.winner:type_name -> hypurr.HypurrFunCabal
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_hypurr_cabal_proto_init() }
func file_hypurr_cabal_proto_init() {
	if File_hypurr_cabal_proto != nil {
		return
	}
	file_hypurr_wallet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hypurr_cabal_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_cabal_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_cabal_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_cabal_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalTrackedWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_cabal_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_cabal_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalUserSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_cabal_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalPerformance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hypurr_cabal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hypurr_cabal_proto_goTypes,
		DependencyIndexes: file_hypurr_cabal_proto_depIdxs,
		MessageInfos:      file_hypurr_cabal_proto_msgTypes,
	}.Build()
	File_hypurr_cabal_proto = out.File
	file_hypurr_cabal_proto_rawDesc = nil
	file_hypurr_cabal_proto_goTypes = nil
	file_hypurr_cabal_proto_depIdxs = nil
}
