// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: hypurr/static_service.proto

package hypurr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HyperliquidTokenHoldersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId int64 `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *HyperliquidTokenHoldersRequest) Reset() {
	*x = HyperliquidTokenHoldersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenHoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenHoldersRequest) ProtoMessage() {}

func (x *HyperliquidTokenHoldersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenHoldersRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenHoldersRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{0}
}

func (x *HyperliquidTokenHoldersRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type HyperliquidTokenHoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Holders []*HyperliquidTokenHolder `protobuf:"bytes,1,rep,name=holders,proto3" json:"holders,omitempty"`
}

func (x *HyperliquidTokenHoldersResponse) Reset() {
	*x = HyperliquidTokenHoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenHoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenHoldersResponse) ProtoMessage() {}

func (x *HyperliquidTokenHoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenHoldersResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenHoldersResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{1}
}

func (x *HyperliquidTokenHoldersResponse) GetHolders() []*HyperliquidTokenHolder {
	if x != nil {
		return x.Holders
	}
	return nil
}

type HyperliquidDeployAuctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperliquidDeployAuctionRequest) Reset() {
	*x = HyperliquidDeployAuctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidDeployAuctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidDeployAuctionRequest) ProtoMessage() {}

func (x *HyperliquidDeployAuctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidDeployAuctionRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidDeployAuctionRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{2}
}

type HyperliquidDeployAuctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auction *HyperliquidDeployAuction `protobuf:"bytes,1,opt,name=auction,proto3" json:"auction,omitempty"`
}

func (x *HyperliquidDeployAuctionResponse) Reset() {
	*x = HyperliquidDeployAuctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidDeployAuctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidDeployAuctionResponse) ProtoMessage() {}

func (x *HyperliquidDeployAuctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidDeployAuctionResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidDeployAuctionResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{3}
}

func (x *HyperliquidDeployAuctionResponse) GetAuction() *HyperliquidDeployAuction {
	if x != nil {
		return x.Auction
	}
	return nil
}

type HyperliquidTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperliquidTokensRequest) Reset() {
	*x = HyperliquidTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokensRequest) ProtoMessage() {}

func (x *HyperliquidTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokensRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidTokensRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{4}
}

type HyperliquidTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*HyperliquidToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *HyperliquidTokensResponse) Reset() {
	*x = HyperliquidTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokensResponse) ProtoMessage() {}

func (x *HyperliquidTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokensResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidTokensResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{5}
}

func (x *HyperliquidTokensResponse) GetTokens() []*HyperliquidToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type HyperliquidTokenMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId int64 `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *HyperliquidTokenMessagesRequest) Reset() {
	*x = HyperliquidTokenMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenMessagesRequest) ProtoMessage() {}

func (x *HyperliquidTokenMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenMessagesRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenMessagesRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{6}
}

func (x *HyperliquidTokenMessagesRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type HyperliquidTokenMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*HyperliquidTokenMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *HyperliquidTokenMessagesResponse) Reset() {
	*x = HyperliquidTokenMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenMessagesResponse) ProtoMessage() {}

func (x *HyperliquidTokenMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenMessagesResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenMessagesResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{7}
}

func (x *HyperliquidTokenMessagesResponse) GetMessages() []*HyperliquidTokenMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type HyperliquidSpotPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HyperliquidSpotPairRequest) Reset() {
	*x = HyperliquidSpotPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidSpotPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidSpotPairRequest) ProtoMessage() {}

func (x *HyperliquidSpotPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidSpotPairRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidSpotPairRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{8}
}

func (x *HyperliquidSpotPairRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type HyperliquidSpotPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair *HyperliquidSpotPair `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *HyperliquidSpotPairResponse) Reset() {
	*x = HyperliquidSpotPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidSpotPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidSpotPairResponse) ProtoMessage() {}

func (x *HyperliquidSpotPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidSpotPairResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidSpotPairResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{9}
}

func (x *HyperliquidSpotPairResponse) GetPair() *HyperliquidSpotPair {
	if x != nil {
		return x.Pair
	}
	return nil
}

type HyperliquidSpotPairsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperliquidSpotPairsRequest) Reset() {
	*x = HyperliquidSpotPairsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidSpotPairsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidSpotPairsRequest) ProtoMessage() {}

func (x *HyperliquidSpotPairsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidSpotPairsRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidSpotPairsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{10}
}

type HyperliquidSpotPairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs []*HyperliquidSpotPair `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *HyperliquidSpotPairsResponse) Reset() {
	*x = HyperliquidSpotPairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidSpotPairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidSpotPairsResponse) ProtoMessage() {}

func (x *HyperliquidSpotPairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidSpotPairsResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidSpotPairsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{11}
}

func (x *HyperliquidSpotPairsResponse) GetPairs() []*HyperliquidSpotPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type HyperliquidPerpPairsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HyperliquidPerpPairsRequest) Reset() {
	*x = HyperliquidPerpPairsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidPerpPairsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidPerpPairsRequest) ProtoMessage() {}

func (x *HyperliquidPerpPairsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidPerpPairsRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidPerpPairsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{12}
}

type HyperliquidPerpPairsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs []*HyperliquidPerpPair `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
}

func (x *HyperliquidPerpPairsResponse) Reset() {
	*x = HyperliquidPerpPairsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidPerpPairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidPerpPairsResponse) ProtoMessage() {}

func (x *HyperliquidPerpPairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidPerpPairsResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidPerpPairsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{13}
}

func (x *HyperliquidPerpPairsResponse) GetPairs() []*HyperliquidPerpPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type HyperliquidWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthereumAddress *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=ethereum_address,json=ethereumAddress,proto3" json:"ethereum_address,omitempty"`
}

func (x *HyperliquidWalletRequest) Reset() {
	*x = HyperliquidWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidWalletRequest) ProtoMessage() {}

func (x *HyperliquidWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidWalletRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidWalletRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{14}
}

func (x *HyperliquidWalletRequest) GetEthereumAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.EthereumAddress
	}
	return nil
}

type HyperliquidWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wallet *HyperliquidWallet `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
}

func (x *HyperliquidWalletResponse) Reset() {
	*x = HyperliquidWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidWalletResponse) ProtoMessage() {}

func (x *HyperliquidWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidWalletResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidWalletResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{15}
}

func (x *HyperliquidWalletResponse) GetWallet() *HyperliquidWallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type HyperliquidLaunchesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchIds []int64 `protobuf:"varint,1,rep,packed,name=launch_ids,json=launchIds,proto3" json:"launch_ids,omitempty"`
}

func (x *HyperliquidLaunchesRequest) Reset() {
	*x = HyperliquidLaunchesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchesRequest) ProtoMessage() {}

func (x *HyperliquidLaunchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchesRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchesRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{16}
}

func (x *HyperliquidLaunchesRequest) GetLaunchIds() []int64 {
	if x != nil {
		return x.LaunchIds
	}
	return nil
}

type HyperliquidLaunchesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Launches []*HyperliquidLaunch `protobuf:"bytes,1,rep,name=launches,proto3" json:"launches,omitempty"`
}

func (x *HyperliquidLaunchesResponse) Reset() {
	*x = HyperliquidLaunchesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchesResponse) ProtoMessage() {}

func (x *HyperliquidLaunchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchesResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchesResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{17}
}

func (x *HyperliquidLaunchesResponse) GetLaunches() []*HyperliquidLaunch {
	if x != nil {
		return x.Launches
	}
	return nil
}

type HyperliquidLaunchStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchId *wrapperspb.Int64Value `protobuf:"bytes,1,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	// Default: 200
	Limit *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *HyperliquidLaunchStreamRequest) Reset() {
	*x = HyperliquidLaunchStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchStreamRequest) ProtoMessage() {}

func (x *HyperliquidLaunchStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchStreamRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchStreamRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{18}
}

func (x *HyperliquidLaunchStreamRequest) GetLaunchId() *wrapperspb.Int64Value {
	if x != nil {
		return x.LaunchId
	}
	return nil
}

func (x *HyperliquidLaunchStreamRequest) GetLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

type HyperliquidLaunchStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Launches []*HyperliquidLaunch `protobuf:"bytes,1,rep,name=launches,proto3" json:"launches,omitempty"`
}

func (x *HyperliquidLaunchStreamResponse) Reset() {
	*x = HyperliquidLaunchStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchStreamResponse) ProtoMessage() {}

func (x *HyperliquidLaunchStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchStreamResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchStreamResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{19}
}

func (x *HyperliquidLaunchStreamResponse) GetLaunches() []*HyperliquidLaunch {
	if x != nil {
		return x.Launches
	}
	return nil
}

type HyperliquidWalletDeploySessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramId      *wrapperspb.Int64Value  `protobuf:"bytes,1,opt,name=telegram_id,json=telegramId,proto3" json:"telegram_id,omitempty"`
	WalletId        *wrapperspb.Int64Value  `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	SessionId       *wrapperspb.Int64Value  `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	EthereumAddress *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=ethereum_address,json=ethereumAddress,proto3" json:"ethereum_address,omitempty"`
}

func (x *HyperliquidWalletDeploySessionsRequest) Reset() {
	*x = HyperliquidWalletDeploySessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidWalletDeploySessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidWalletDeploySessionsRequest) ProtoMessage() {}

func (x *HyperliquidWalletDeploySessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidWalletDeploySessionsRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidWalletDeploySessionsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{20}
}

func (x *HyperliquidWalletDeploySessionsRequest) GetTelegramId() *wrapperspb.Int64Value {
	if x != nil {
		return x.TelegramId
	}
	return nil
}

func (x *HyperliquidWalletDeploySessionsRequest) GetWalletId() *wrapperspb.Int64Value {
	if x != nil {
		return x.WalletId
	}
	return nil
}

func (x *HyperliquidWalletDeploySessionsRequest) GetSessionId() *wrapperspb.Int64Value {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *HyperliquidWalletDeploySessionsRequest) GetEthereumAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.EthereumAddress
	}
	return nil
}

type HyperliquidWalletDeploySessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions []*HyperliquidWalletDeploySession `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
}

func (x *HyperliquidWalletDeploySessionsResponse) Reset() {
	*x = HyperliquidWalletDeploySessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidWalletDeploySessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidWalletDeploySessionsResponse) ProtoMessage() {}

func (x *HyperliquidWalletDeploySessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidWalletDeploySessionsResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidWalletDeploySessionsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{21}
}

func (x *HyperliquidWalletDeploySessionsResponse) GetSessions() []*HyperliquidWalletDeploySession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

type SetHyperliquidWalletDeploySessionTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthereumAddress *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=ethereum_address,json=ethereumAddress,proto3" json:"ethereum_address,omitempty"`
	SessionId       int64                   `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Name            string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Target          string                  `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Share           int32                   `protobuf:"varint,5,opt,name=share,proto3" json:"share,omitempty"`
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) Reset() {
	*x = SetHyperliquidWalletDeploySessionTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHyperliquidWalletDeploySessionTargetRequest) ProtoMessage() {}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHyperliquidWalletDeploySessionTargetRequest.ProtoReflect.Descriptor instead.
func (*SetHyperliquidWalletDeploySessionTargetRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{22}
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) GetEthereumAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.EthereumAddress
	}
	return nil
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *SetHyperliquidWalletDeploySessionTargetRequest) GetShare() int32 {
	if x != nil {
		return x.Share
	}
	return 0
}

type SetHyperliquidWalletDeploySessionTargetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *HyperliquidWalletDeploySession `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *SetHyperliquidWalletDeploySessionTargetResponse) Reset() {
	*x = SetHyperliquidWalletDeploySessionTargetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHyperliquidWalletDeploySessionTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHyperliquidWalletDeploySessionTargetResponse) ProtoMessage() {}

func (x *SetHyperliquidWalletDeploySessionTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHyperliquidWalletDeploySessionTargetResponse.ProtoReflect.Descriptor instead.
func (*SetHyperliquidWalletDeploySessionTargetResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{23}
}

func (x *SetHyperliquidWalletDeploySessionTargetResponse) GetSession() *HyperliquidWalletDeploySession {
	if x != nil {
		return x.Session
	}
	return nil
}

type DeleteHyperliquidWalletDeploySessionTargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthereumAddress *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=ethereum_address,json=ethereumAddress,proto3" json:"ethereum_address,omitempty"`
	SessionId       int64                   `protobuf:"varint,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Name            string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteHyperliquidWalletDeploySessionTargetRequest) Reset() {
	*x = DeleteHyperliquidWalletDeploySessionTargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHyperliquidWalletDeploySessionTargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHyperliquidWalletDeploySessionTargetRequest) ProtoMessage() {}

func (x *DeleteHyperliquidWalletDeploySessionTargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHyperliquidWalletDeploySessionTargetRequest.ProtoReflect.Descriptor instead.
func (*DeleteHyperliquidWalletDeploySessionTargetRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteHyperliquidWalletDeploySessionTargetRequest) GetEthereumAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.EthereumAddress
	}
	return nil
}

func (x *DeleteHyperliquidWalletDeploySessionTargetRequest) GetSessionId() int64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *DeleteHyperliquidWalletDeploySessionTargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteHyperliquidWalletDeploySessionTargetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *HyperliquidWalletDeploySession `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
}

func (x *DeleteHyperliquidWalletDeploySessionTargetResponse) Reset() {
	*x = DeleteHyperliquidWalletDeploySessionTargetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHyperliquidWalletDeploySessionTargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHyperliquidWalletDeploySessionTargetResponse) ProtoMessage() {}

func (x *DeleteHyperliquidWalletDeploySessionTargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHyperliquidWalletDeploySessionTargetResponse.ProtoReflect.Descriptor instead.
func (*DeleteHyperliquidWalletDeploySessionTargetResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteHyperliquidWalletDeploySessionTargetResponse) GetSession() *HyperliquidWalletDeploySession {
	if x != nil {
		return x.Session
	}
	return nil
}

type HyperliquidLaunchFillsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchId *wrapperspb.Int64Value `protobuf:"bytes,1,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	Limit    *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *HyperliquidLaunchFillsRequest) Reset() {
	*x = HyperliquidLaunchFillsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchFillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchFillsRequest) ProtoMessage() {}

func (x *HyperliquidLaunchFillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchFillsRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchFillsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{26}
}

func (x *HyperliquidLaunchFillsRequest) GetLaunchId() *wrapperspb.Int64Value {
	if x != nil {
		return x.LaunchId
	}
	return nil
}

func (x *HyperliquidLaunchFillsRequest) GetLimit() *wrapperspb.Int64Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

type HyperliquidLaunchFillsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fills     []*HyperliquidLaunchFill     `protobuf:"bytes,1,rep,name=fills,proto3" json:"fills,omitempty"`
	Positions []*HyperliquidLaunchPosition `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *HyperliquidLaunchFillsResponse) Reset() {
	*x = HyperliquidLaunchFillsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchFillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchFillsResponse) ProtoMessage() {}

func (x *HyperliquidLaunchFillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchFillsResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchFillsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{27}
}

func (x *HyperliquidLaunchFillsResponse) GetFills() []*HyperliquidLaunchFill {
	if x != nil {
		return x.Fills
	}
	return nil
}

func (x *HyperliquidLaunchFillsResponse) GetPositions() []*HyperliquidLaunchPosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

type HyperliquidLaunchCandlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchId int64  `protobuf:"varint,1,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *HyperliquidLaunchCandlesRequest) Reset() {
	*x = HyperliquidLaunchCandlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchCandlesRequest) ProtoMessage() {}

func (x *HyperliquidLaunchCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchCandlesRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchCandlesRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{28}
}

func (x *HyperliquidLaunchCandlesRequest) GetLaunchId() int64 {
	if x != nil {
		return x.LaunchId
	}
	return 0
}

func (x *HyperliquidLaunchCandlesRequest) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type HyperliquidLaunchCandlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candles []*HyperliquidLaunchCandle `protobuf:"bytes,1,rep,name=candles,proto3" json:"candles,omitempty"`
}

func (x *HyperliquidLaunchCandlesResponse) Reset() {
	*x = HyperliquidLaunchCandlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchCandlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchCandlesResponse) ProtoMessage() {}

func (x *HyperliquidLaunchCandlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchCandlesResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchCandlesResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{29}
}

func (x *HyperliquidLaunchCandlesResponse) GetCandles() []*HyperliquidLaunchCandle {
	if x != nil {
		return x.Candles
	}
	return nil
}

type HyperliquidLaunchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *HyperliquidLaunchRequest) Reset() {
	*x = HyperliquidLaunchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchRequest) ProtoMessage() {}

func (x *HyperliquidLaunchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{30}
}

func (x *HyperliquidLaunchRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type HyperliquidLaunchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Launch *HyperliquidLaunch `protobuf:"bytes,1,opt,name=launch,proto3" json:"launch,omitempty"`
}

func (x *HyperliquidLaunchResponse) Reset() {
	*x = HyperliquidLaunchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchResponse) ProtoMessage() {}

func (x *HyperliquidLaunchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{31}
}

func (x *HyperliquidLaunchResponse) GetLaunch() *HyperliquidLaunch {
	if x != nil {
		return x.Launch
	}
	return nil
}

type HyperliquidLaunchMessagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchId int64                 `protobuf:"varint,1,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
	Pinned   *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Dev      *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=dev,proto3" json:"dev,omitempty"`
}

func (x *HyperliquidLaunchMessagesRequest) Reset() {
	*x = HyperliquidLaunchMessagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchMessagesRequest) ProtoMessage() {}

func (x *HyperliquidLaunchMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchMessagesRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchMessagesRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{32}
}

func (x *HyperliquidLaunchMessagesRequest) GetLaunchId() int64 {
	if x != nil {
		return x.LaunchId
	}
	return 0
}

func (x *HyperliquidLaunchMessagesRequest) GetPinned() *wrapperspb.BoolValue {
	if x != nil {
		return x.Pinned
	}
	return nil
}

func (x *HyperliquidLaunchMessagesRequest) GetDev() *wrapperspb.BoolValue {
	if x != nil {
		return x.Dev
	}
	return nil
}

type HyperliquidLaunchMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*HyperliquidLaunchMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *HyperliquidLaunchMessagesResponse) Reset() {
	*x = HyperliquidLaunchMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchMessagesResponse) ProtoMessage() {}

func (x *HyperliquidLaunchMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchMessagesResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchMessagesResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{33}
}

func (x *HyperliquidLaunchMessagesResponse) GetMessages() []*HyperliquidLaunchMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type HyperliquidLaunchHoldersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchId int64 `protobuf:"varint,1,opt,name=launch_id,json=launchId,proto3" json:"launch_id,omitempty"`
}

func (x *HyperliquidLaunchHoldersRequest) Reset() {
	*x = HyperliquidLaunchHoldersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchHoldersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchHoldersRequest) ProtoMessage() {}

func (x *HyperliquidLaunchHoldersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchHoldersRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchHoldersRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{34}
}

func (x *HyperliquidLaunchHoldersRequest) GetLaunchId() int64 {
	if x != nil {
		return x.LaunchId
	}
	return 0
}

type HyperliquidLaunchHoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Holders []*HyperliquidLaunchHolder `protobuf:"bytes,1,rep,name=holders,proto3" json:"holders,omitempty"`
}

func (x *HyperliquidLaunchHoldersResponse) Reset() {
	*x = HyperliquidLaunchHoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidLaunchHoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidLaunchHoldersResponse) ProtoMessage() {}

func (x *HyperliquidLaunchHoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidLaunchHoldersResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidLaunchHoldersResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{35}
}

func (x *HyperliquidLaunchHoldersResponse) GetHolders() []*HyperliquidLaunchHolder {
	if x != nil {
		return x.Holders
	}
	return nil
}

type LatestHyperliquidLaunchFillsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LatestHyperliquidLaunchFillsRequest) Reset() {
	*x = LatestHyperliquidLaunchFillsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LatestHyperliquidLaunchFillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatestHyperliquidLaunchFillsRequest) ProtoMessage() {}

func (x *LatestHyperliquidLaunchFillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatestHyperliquidLaunchFillsRequest.ProtoReflect.Descriptor instead.
func (*LatestHyperliquidLaunchFillsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{36}
}

type HyperliquidWalletPerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthereumAddress *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=ethereum_address,json=ethereumAddress,proto3" json:"ethereum_address,omitempty"`
	AccountType     string                  `protobuf:"bytes,2,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"`
}

func (x *HyperliquidWalletPerformanceRequest) Reset() {
	*x = HyperliquidWalletPerformanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidWalletPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidWalletPerformanceRequest) ProtoMessage() {}

func (x *HyperliquidWalletPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidWalletPerformanceRequest.ProtoReflect.Descriptor instead.
func (*HyperliquidWalletPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{37}
}

func (x *HyperliquidWalletPerformanceRequest) GetEthereumAddress() *wrapperspb.StringValue {
	if x != nil {
		return x.EthereumAddress
	}
	return nil
}

func (x *HyperliquidWalletPerformanceRequest) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

type HyperliquidWalletPerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spot   *Performance `protobuf:"bytes,1,opt,name=spot,proto3" json:"spot,omitempty"`
	Perp   *Performance `protobuf:"bytes,2,opt,name=perp,proto3" json:"perp,omitempty"`
	Launch *Performance `protobuf:"bytes,3,opt,name=launch,proto3" json:"launch,omitempty"`
}

func (x *HyperliquidWalletPerformanceResponse) Reset() {
	*x = HyperliquidWalletPerformanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidWalletPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidWalletPerformanceResponse) ProtoMessage() {}

func (x *HyperliquidWalletPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidWalletPerformanceResponse.ProtoReflect.Descriptor instead.
func (*HyperliquidWalletPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{38}
}

func (x *HyperliquidWalletPerformanceResponse) GetSpot() *Performance {
	if x != nil {
		return x.Spot
	}
	return nil
}

func (x *HyperliquidWalletPerformanceResponse) GetPerp() *Performance {
	if x != nil {
		return x.Perp
	}
	return nil
}

func (x *HyperliquidWalletPerformanceResponse) GetLaunch() *Performance {
	if x != nil {
		return x.Launch
	}
	return nil
}

type HypurrFunCabalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HypurrFunCabalsRequest) Reset() {
	*x = HypurrFunCabalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalsRequest) ProtoMessage() {}

func (x *HypurrFunCabalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalsRequest.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalsRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{39}
}

type HypurrFunCabalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cabals []*HypurrFunCabal `protobuf:"bytes,1,rep,name=cabals,proto3" json:"cabals,omitempty"`
}

func (x *HypurrFunCabalsResponse) Reset() {
	*x = HypurrFunCabalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalsResponse) ProtoMessage() {}

func (x *HypurrFunCabalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalsResponse.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalsResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{40}
}

func (x *HypurrFunCabalsResponse) GetCabals() []*HypurrFunCabal {
	if x != nil {
		return x.Cabals
	}
	return nil
}

type HypurrFunCabalPerformanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramChatId int64 `protobuf:"varint,1,opt,name=telegram_chat_id,json=telegramChatId,proto3" json:"telegram_chat_id,omitempty"`
}

func (x *HypurrFunCabalPerformanceRequest) Reset() {
	*x = HypurrFunCabalPerformanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalPerformanceRequest) ProtoMessage() {}

func (x *HypurrFunCabalPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalPerformanceRequest.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{41}
}

func (x *HypurrFunCabalPerformanceRequest) GetTelegramChatId() int64 {
	if x != nil {
		return x.TelegramChatId
	}
	return 0
}

type HypurrFunCabalPerformanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Performances []*HypurrFunCabalPerformance `protobuf:"bytes,1,rep,name=performances,proto3" json:"performances,omitempty"`
}

func (x *HypurrFunCabalPerformanceResponse) Reset() {
	*x = HypurrFunCabalPerformanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_static_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HypurrFunCabalPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HypurrFunCabalPerformanceResponse) ProtoMessage() {}

func (x *HypurrFunCabalPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_static_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HypurrFunCabalPerformanceResponse.ProtoReflect.Descriptor instead.
func (*HypurrFunCabalPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_hypurr_static_service_proto_rawDescGZIP(), []int{42}
}

func (x *HypurrFunCabalPerformanceResponse) GetPerformances() []*HypurrFunCabalPerformance {
	if x != nil {
		return x.Performances
	}
	return nil
}

var File_hypurr_static_service_proto protoreflect.FileDescriptor

var file_hypurr_static_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x70, 0x61, 0x69, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f,
	0x63, 0x61, 0x62, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2f, 0x65, 0x76, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a,
	0x1e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x1f, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x07,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x20, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x61, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x19, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x1f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4e, 0x0a, 0x1b, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x72, 0x22, 0x1d, 0x0a, 0x1b, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x51, 0x0a, 0x1c, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x69, 0x72, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x50, 0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x1c, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x50, 0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x50, 0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0x63, 0x0a, 0x18, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4e, 0x0a, 0x19, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x3b, 0x0a, 0x1a, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x1b, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0x8d,
	0x01, 0x0a, 0x1e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x58,
	0x0a, 0x1f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x52, 0x08,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x26, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x6d, 0x0a, 0x27, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xda, 0x01, 0x0a, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x22, 0x73, 0x0a, 0x2f,
	0x53, 0x65, 0x74, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xaf, 0x01, 0x0a, 0x31, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x32, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x1d,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x1e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x05, 0x66, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x52, 0x05, 0x66, 0x69, 0x6c,
	0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x1f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22,
	0x5d, 0x0a, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x22, 0x2a,
	0x0a, 0x18, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x19, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x6c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x52, 0x06, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x22, 0xa1, 0x01, 0x0a, 0x20, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06,
	0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x03, 0x64, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x64, 0x65, 0x76, 0x22, 0x61,
	0x0a, 0x21, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x3e, 0x0a, 0x1f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x20, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x25, 0x0a, 0x23, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x23, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x47, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x24,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x12, 0x27, 0x0a,
	0x04, 0x70, 0x65, 0x72, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x79,
	0x70, 0x75, 0x72, 0x72, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x04, 0x70, 0x65, 0x72, 0x70, 0x12, 0x2b, 0x0a, 0x06, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x06, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x22, 0x18, 0x0a, 0x16, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e,
	0x43, 0x61, 0x62, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a,
	0x17, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x61, 0x62, 0x61,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c,
	0x52, 0x06, 0x63, 0x61, 0x62, 0x61, 0x6c, 0x73, 0x22, 0x4c, 0x0a, 0x20, 0x48, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x21, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x70,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x32, 0xb7, 0x14, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x6f, 0x0a,
	0x18, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x11, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x18, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x60, 0x0a, 0x13, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x22, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x14, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53, 0x70, 0x6f, 0x74, 0x50, 0x61,
	0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x53,
	0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x14, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x50, 0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x50,
	0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x50, 0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x1f, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1c, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x12, 0x20, 0x2e, 0x68,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x68, 0x79, 0x70,
	0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x17, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6b, 0x0a, 0x16, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x12,
	0x25, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x6f, 0x0a, 0x18, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x12, 0x27,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1d, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x27, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x74, 0x0a, 0x19, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x77, 0x0a, 0x1c, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x79, 0x70, 0x65, 0x72,
	0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c,
	0x73, 0x12, 0x2b, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x6f, 0x0a, 0x18, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e,
	0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x48,
	0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x73, 0x12, 0x1e,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75,
	0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75,
	0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x72, 0x0a, 0x19, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61,
	0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75,
	0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2e, 0x48, 0x79, 0x70, 0x75, 0x72, 0x72, 0x46, 0x75, 0x6e, 0x43, 0x61, 0x62, 0x61, 0x6c,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x27, 0x53, 0x65, 0x74, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x36, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x68, 0x79, 0x70, 0x75,
	0x72, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0xa5, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x12, 0x39, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f,
	0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hypurr_static_service_proto_rawDescOnce sync.Once
	file_hypurr_static_service_proto_rawDescData = file_hypurr_static_service_proto_rawDesc
)

func file_hypurr_static_service_proto_rawDescGZIP() []byte {
	file_hypurr_static_service_proto_rawDescOnce.Do(func() {
		file_hypurr_static_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_hypurr_static_service_proto_rawDescData)
	})
	return file_hypurr_static_service_proto_rawDescData
}

var file_hypurr_static_service_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_hypurr_static_service_proto_goTypes = []any{
	(*HyperliquidTokenHoldersRequest)(nil),                     // 0: hypurr.HyperliquidTokenHoldersRequest
	(*HyperliquidTokenHoldersResponse)(nil),                    // 1: hypurr.HyperliquidTokenHoldersResponse
	(*HyperliquidDeployAuctionRequest)(nil),                    // 2: hypurr.HyperliquidDeployAuctionRequest
	(*HyperliquidDeployAuctionResponse)(nil),                   // 3: hypurr.HyperliquidDeployAuctionResponse
	(*HyperliquidTokensRequest)(nil),                           // 4: hypurr.HyperliquidTokensRequest
	(*HyperliquidTokensResponse)(nil),                          // 5: hypurr.HyperliquidTokensResponse
	(*HyperliquidTokenMessagesRequest)(nil),                    // 6: hypurr.HyperliquidTokenMessagesRequest
	(*HyperliquidTokenMessagesResponse)(nil),                   // 7: hypurr.HyperliquidTokenMessagesResponse
	(*HyperliquidSpotPairRequest)(nil),                         // 8: hypurr.HyperliquidSpotPairRequest
	(*HyperliquidSpotPairResponse)(nil),                        // 9: hypurr.HyperliquidSpotPairResponse
	(*HyperliquidSpotPairsRequest)(nil),                        // 10: hypurr.HyperliquidSpotPairsRequest
	(*HyperliquidSpotPairsResponse)(nil),                       // 11: hypurr.HyperliquidSpotPairsResponse
	(*HyperliquidPerpPairsRequest)(nil),                        // 12: hypurr.HyperliquidPerpPairsRequest
	(*HyperliquidPerpPairsResponse)(nil),                       // 13: hypurr.HyperliquidPerpPairsResponse
	(*HyperliquidWalletRequest)(nil),                           // 14: hypurr.HyperliquidWalletRequest
	(*HyperliquidWalletResponse)(nil),                          // 15: hypurr.HyperliquidWalletResponse
	(*HyperliquidLaunchesRequest)(nil),                         // 16: hypurr.HyperliquidLaunchesRequest
	(*HyperliquidLaunchesResponse)(nil),                        // 17: hypurr.HyperliquidLaunchesResponse
	(*HyperliquidLaunchStreamRequest)(nil),                     // 18: hypurr.HyperliquidLaunchStreamRequest
	(*HyperliquidLaunchStreamResponse)(nil),                    // 19: hypurr.HyperliquidLaunchStreamResponse
	(*HyperliquidWalletDeploySessionsRequest)(nil),             // 20: hypurr.HyperliquidWalletDeploySessionsRequest
	(*HyperliquidWalletDeploySessionsResponse)(nil),            // 21: hypurr.HyperliquidWalletDeploySessionsResponse
	(*SetHyperliquidWalletDeploySessionTargetRequest)(nil),     // 22: hypurr.SetHyperliquidWalletDeploySessionTargetRequest
	(*SetHyperliquidWalletDeploySessionTargetResponse)(nil),    // 23: hypurr.SetHyperliquidWalletDeploySessionTargetResponse
	(*DeleteHyperliquidWalletDeploySessionTargetRequest)(nil),  // 24: hypurr.DeleteHyperliquidWalletDeploySessionTargetRequest
	(*DeleteHyperliquidWalletDeploySessionTargetResponse)(nil), // 25: hypurr.DeleteHyperliquidWalletDeploySessionTargetResponse
	(*HyperliquidLaunchFillsRequest)(nil),                      // 26: hypurr.HyperliquidLaunchFillsRequest
	(*HyperliquidLaunchFillsResponse)(nil),                     // 27: hypurr.HyperliquidLaunchFillsResponse
	(*HyperliquidLaunchCandlesRequest)(nil),                    // 28: hypurr.HyperliquidLaunchCandlesRequest
	(*HyperliquidLaunchCandlesResponse)(nil),                   // 29: hypurr.HyperliquidLaunchCandlesResponse
	(*HyperliquidLaunchRequest)(nil),                           // 30: hypurr.HyperliquidLaunchRequest
	(*HyperliquidLaunchResponse)(nil),                          // 31: hypurr.HyperliquidLaunchResponse
	(*HyperliquidLaunchMessagesRequest)(nil),                   // 32: hypurr.HyperliquidLaunchMessagesRequest
	(*HyperliquidLaunchMessagesResponse)(nil),                  // 33: hypurr.HyperliquidLaunchMessagesResponse
	(*HyperliquidLaunchHoldersRequest)(nil),                    // 34: hypurr.HyperliquidLaunchHoldersRequest
	(*HyperliquidLaunchHoldersResponse)(nil),                   // 35: hypurr.HyperliquidLaunchHoldersResponse
	(*LatestHyperliquidLaunchFillsRequest)(nil),                // 36: hypurr.LatestHyperliquidLaunchFillsRequest
	(*HyperliquidWalletPerformanceRequest)(nil),                // 37: hypurr.HyperliquidWalletPerformanceRequest
	(*HyperliquidWalletPerformanceResponse)(nil),               // 38: hypurr.HyperliquidWalletPerformanceResponse
	(*HypurrFunCabalsRequest)(nil),                             // 39: hypurr.HypurrFunCabalsRequest
	(*HypurrFunCabalsResponse)(nil),                            // 40: hypurr.HypurrFunCabalsResponse
	(*HypurrFunCabalPerformanceRequest)(nil),                   // 41: hypurr.HypurrFunCabalPerformanceRequest
	(*HypurrFunCabalPerformanceResponse)(nil),                  // 42: hypurr.HypurrFunCabalPerformanceResponse
	(*HyperliquidTokenHolder)(nil),                             // 43: hypurr.HyperliquidTokenHolder
	(*HyperliquidDeployAuction)(nil),                           // 44: hypurr.HyperliquidDeployAuction
	(*HyperliquidToken)(nil),                                   // 45: hypurr.HyperliquidToken
	(*HyperliquidTokenMessage)(nil),                            // 46: hypurr.HyperliquidTokenMessage
	(*HyperliquidSpotPair)(nil),                                // 47: hypurr.HyperliquidSpotPair
	(*HyperliquidPerpPair)(nil),                                // 48: hypurr.HyperliquidPerpPair
	(*wrapperspb.StringValue)(nil),                             // 49: google.protobuf.StringValue
	(*HyperliquidWallet)(nil),                                  // 50: hypurr.HyperliquidWallet
	(*HyperliquidLaunch)(nil),                                  // 51: hypurr.HyperliquidLaunch
	(*wrapperspb.Int64Value)(nil),                              // 52: google.protobuf.Int64Value
	(*HyperliquidWalletDeploySession)(nil),                     // 53: hypurr.HyperliquidWalletDeploySession
	(*HyperliquidLaunchFill)(nil),                              // 54: hypurr.HyperliquidLaunchFill
	(*HyperliquidLaunchPosition)(nil),                          // 55: hypurr.HyperliquidLaunchPosition
	(*HyperliquidLaunchCandle)(nil),                            // 56: hypurr.HyperliquidLaunchCandle
	(*wrapperspb.BoolValue)(nil),                               // 57: google.protobuf.BoolValue
	(*HyperliquidLaunchMessage)(nil),                           // 58: hypurr.HyperliquidLaunchMessage
	(*HyperliquidLaunchHolder)(nil),                            // 59: hypurr.HyperliquidLaunchHolder
	(*Performance)(nil),                                        // 60: hypurr.Performance
	(*HypurrFunCabal)(nil),                                     // 61: hypurr.HypurrFunCabal
	(*HypurrFunCabalPerformance)(nil),                          // 62: hypurr.HypurrFunCabalPerformance
}
var file_hypurr_static_service_proto_depIdxs = []int32{
	43, // 0: hypurr.HyperliquidTokenHoldersResponse.holders:type_name -> hypurr.HyperliquidTokenHolder
	44, // 1: hypurr.HyperliquidDeployAuctionResponse.auction:type_name -> hypurr.HyperliquidDeployAuction
	45, // 2: hypurr.HyperliquidTokensResponse.tokens:type_name -> hypurr.HyperliquidToken
	46, // 3: hypurr.HyperliquidTokenMessagesResponse.messages:type_name -> hypurr.HyperliquidTokenMessage
	47, // 4: hypurr.HyperliquidSpotPairResponse.pair:type_name -> hypurr.HyperliquidSpotPair
	47, // 5: hypurr.HyperliquidSpotPairsResponse.pairs:type_name -> hypurr.HyperliquidSpotPair
	48, // 6: hypurr.HyperliquidPerpPairsResponse.pairs:type_name -> hypurr.HyperliquidPerpPair
	49, // 7: hypurr.HyperliquidWalletRequest.ethereum_address:type_name -> google.protobuf.StringValue
	50, // 8: hypurr.HyperliquidWalletResponse.wallet:type_name -> hypurr.HyperliquidWallet
	51, // 9: hypurr.HyperliquidLaunchesResponse.launches:type_name -> hypurr.HyperliquidLaunch
	52, // 10: hypurr.HyperliquidLaunchStreamRequest.launch_id:type_name -> google.protobuf.Int64Value
	52, // 11: hypurr.HyperliquidLaunchStreamRequest.limit:type_name -> google.protobuf.Int64Value
	51, // 12: hypurr.HyperliquidLaunchStreamResponse.launches:type_name -> hypurr.HyperliquidLaunch
	52, // 13: hypurr.HyperliquidWalletDeploySessionsRequest.telegram_id:type_name -> google.protobuf.Int64Value
	52, // 14: hypurr.HyperliquidWalletDeploySessionsRequest.wallet_id:type_name -> google.protobuf.Int64Value
	52, // 15: hypurr.HyperliquidWalletDeploySessionsRequest.session_id:type_name -> google.protobuf.Int64Value
	49, // 16: hypurr.HyperliquidWalletDeploySessionsRequest.ethereum_address:type_name -> google.protobuf.StringValue
	53, // 17: hypurr.HyperliquidWalletDeploySessionsResponse.sessions:type_name -> hypurr.HyperliquidWalletDeploySession
	49, // 18: hypurr.SetHyperliquidWalletDeploySessionTargetRequest.ethereum_address:type_name -> google.protobuf.StringValue
	53, // 19: hypurr.SetHyperliquidWalletDeploySessionTargetResponse.session:type_name -> hypurr.HyperliquidWalletDeploySession
	49, // 20: hypurr.DeleteHyperliquidWalletDeploySessionTargetRequest.ethereum_address:type_name -> google.protobuf.StringValue
	53, // 21: hypurr.DeleteHyperliquidWalletDeploySessionTargetResponse.session:type_name -> hypurr.HyperliquidWalletDeploySession
	52, // 22: hypurr.HyperliquidLaunchFillsRequest.launch_id:type_name -> google.protobuf.Int64Value
	52, // 23: hypurr.HyperliquidLaunchFillsRequest.limit:type_name -> google.protobuf.Int64Value
	54, // 24: hypurr.HyperliquidLaunchFillsResponse.fills:type_name -> hypurr.HyperliquidLaunchFill
	55, // 25: hypurr.HyperliquidLaunchFillsResponse.positions:type_name -> hypurr.HyperliquidLaunchPosition
	56, // 26: hypurr.HyperliquidLaunchCandlesResponse.candles:type_name -> hypurr.HyperliquidLaunchCandle
	51, // 27: hypurr.HyperliquidLaunchResponse.launch:type_name -> hypurr.HyperliquidLaunch
	57, // 28: hypurr.HyperliquidLaunchMessagesRequest.pinned:type_name -> google.protobuf.BoolValue
	57, // 29: hypurr.HyperliquidLaunchMessagesRequest.dev:type_name -> google.protobuf.BoolValue
	58, // 30: hypurr.HyperliquidLaunchMessagesResponse.messages:type_name -> hypurr.HyperliquidLaunchMessage
	59, // 31: hypurr.HyperliquidLaunchHoldersResponse.holders:type_name -> hypurr.HyperliquidLaunchHolder
	49, // 32: hypurr.HyperliquidWalletPerformanceRequest.ethereum_address:type_name -> google.protobuf.StringValue
	60, // 33: hypurr.HyperliquidWalletPerformanceResponse.spot:type_name -> hypurr.Performance
	60, // 34: hypurr.HyperliquidWalletPerformanceResponse.perp:type_name -> hypurr.Performance
	60, // 35: hypurr.HyperliquidWalletPerformanceResponse.launch:type_name -> hypurr.Performance
	61, // 36: hypurr.HypurrFunCabalsResponse.cabals:type_name -> hypurr.HypurrFunCabal
	62, // 37: hypurr.HypurrFunCabalPerformanceResponse.performances:type_name -> hypurr.HypurrFunCabalPerformance
	2,  // 38: hypurr.Static.HyperliquidDeployAuction:input_type -> hypurr.HyperliquidDeployAuctionRequest
	4,  // 39: hypurr.Static.HyperliquidTokens:input_type -> hypurr.HyperliquidTokensRequest
	0,  // 40: hypurr.Static.HyperliquidTokenHolders:input_type -> hypurr.HyperliquidTokenHoldersRequest
	6,  // 41: hypurr.Static.HyperliquidTokenMessages:input_type -> hypurr.HyperliquidTokenMessagesRequest
	8,  // 42: hypurr.Static.HyperliquidSpotPair:input_type -> hypurr.HyperliquidSpotPairRequest
	10, // 43: hypurr.Static.HyperliquidSpotPairs:input_type -> hypurr.HyperliquidSpotPairsRequest
	12, // 44: hypurr.Static.HyperliquidPerpPairs:input_type -> hypurr.HyperliquidPerpPairsRequest
	14, // 45: hypurr.Static.HyperliquidWallet:input_type -> hypurr.HyperliquidWalletRequest
	20, // 46: hypurr.Static.HyperliquidWalletDeploySessions:input_type -> hypurr.HyperliquidWalletDeploySessionsRequest
	37, // 47: hypurr.Static.HyperliquidWalletPerformance:input_type -> hypurr.HyperliquidWalletPerformanceRequest
	30, // 48: hypurr.Static.HyperliquidLaunch:input_type -> hypurr.HyperliquidLaunchRequest
	16, // 49: hypurr.Static.HyperliquidLaunches:input_type -> hypurr.HyperliquidLaunchesRequest
	18, // 50: hypurr.Static.HyperliquidLaunchStream:input_type -> hypurr.HyperliquidLaunchStreamRequest
	26, // 51: hypurr.Static.HyperliquidLaunchFills:input_type -> hypurr.HyperliquidLaunchFillsRequest
	28, // 52: hypurr.Static.HyperliquidLaunchCandles:input_type -> hypurr.HyperliquidLaunchCandlesRequest
	28, // 53: hypurr.Static.HyperliquidLaunchCandleStream:input_type -> hypurr.HyperliquidLaunchCandlesRequest
	32, // 54: hypurr.Static.HyperliquidLaunchMessages:input_type -> hypurr.HyperliquidLaunchMessagesRequest
	36, // 55: hypurr.Static.LatestHyperliquidLaunchFills:input_type -> hypurr.LatestHyperliquidLaunchFillsRequest
	34, // 56: hypurr.Static.HyperliquidLaunchHolders:input_type -> hypurr.HyperliquidLaunchHoldersRequest
	39, // 57: hypurr.Static.HypurrFunCabals:input_type -> hypurr.HypurrFunCabalsRequest
	41, // 58: hypurr.Static.HypurrFunCabalPerformance:input_type -> hypurr.HypurrFunCabalPerformanceRequest
	22, // 59: hypurr.Static.SetHyperliquidWalletDeploySessionTarget:input_type -> hypurr.SetHyperliquidWalletDeploySessionTargetRequest
	24, // 60: hypurr.Static.DeleteHyperliquidWalletDeploySessionTarget:input_type -> hypurr.DeleteHyperliquidWalletDeploySessionTargetRequest
	3,  // 61: hypurr.Static.HyperliquidDeployAuction:output_type -> hypurr.HyperliquidDeployAuctionResponse
	5,  // 62: hypurr.Static.HyperliquidTokens:output_type -> hypurr.HyperliquidTokensResponse
	1,  // 63: hypurr.Static.HyperliquidTokenHolders:output_type -> hypurr.HyperliquidTokenHoldersResponse
	7,  // 64: hypurr.Static.HyperliquidTokenMessages:output_type -> hypurr.HyperliquidTokenMessagesResponse
	9,  // 65: hypurr.Static.HyperliquidSpotPair:output_type -> hypurr.HyperliquidSpotPairResponse
	11, // 66: hypurr.Static.HyperliquidSpotPairs:output_type -> hypurr.HyperliquidSpotPairsResponse
	13, // 67: hypurr.Static.HyperliquidPerpPairs:output_type -> hypurr.HyperliquidPerpPairsResponse
	15, // 68: hypurr.Static.HyperliquidWallet:output_type -> hypurr.HyperliquidWalletResponse
	21, // 69: hypurr.Static.HyperliquidWalletDeploySessions:output_type -> hypurr.HyperliquidWalletDeploySessionsResponse
	38, // 70: hypurr.Static.HyperliquidWalletPerformance:output_type -> hypurr.HyperliquidWalletPerformanceResponse
	31, // 71: hypurr.Static.HyperliquidLaunch:output_type -> hypurr.HyperliquidLaunchResponse
	17, // 72: hypurr.Static.HyperliquidLaunches:output_type -> hypurr.HyperliquidLaunchesResponse
	19, // 73: hypurr.Static.HyperliquidLaunchStream:output_type -> hypurr.HyperliquidLaunchStreamResponse
	27, // 74: hypurr.Static.HyperliquidLaunchFills:output_type -> hypurr.HyperliquidLaunchFillsResponse
	29, // 75: hypurr.Static.HyperliquidLaunchCandles:output_type -> hypurr.HyperliquidLaunchCandlesResponse
	29, // 76: hypurr.Static.HyperliquidLaunchCandleStream:output_type -> hypurr.HyperliquidLaunchCandlesResponse
	33, // 77: hypurr.Static.HyperliquidLaunchMessages:output_type -> hypurr.HyperliquidLaunchMessagesResponse
	27, // 78: hypurr.Static.LatestHyperliquidLaunchFills:output_type -> hypurr.HyperliquidLaunchFillsResponse
	35, // 79: hypurr.Static.HyperliquidLaunchHolders:output_type -> hypurr.HyperliquidLaunchHoldersResponse
	40, // 80: hypurr.Static.HypurrFunCabals:output_type -> hypurr.HypurrFunCabalsResponse
	42, // 81: hypurr.Static.HypurrFunCabalPerformance:output_type -> hypurr.HypurrFunCabalPerformanceResponse
	23, // 82: hypurr.Static.SetHyperliquidWalletDeploySessionTarget:output_type -> hypurr.SetHyperliquidWalletDeploySessionTargetResponse
	25, // 83: hypurr.Static.DeleteHyperliquidWalletDeploySessionTarget:output_type -> hypurr.DeleteHyperliquidWalletDeploySessionTargetResponse
	61, // [61:84] is the sub-list for method output_type
	38, // [38:61] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_hypurr_static_service_proto_init() }
func file_hypurr_static_service_proto_init() {
	if File_hypurr_static_service_proto != nil {
		return
	}
	file_hypurr_token_proto_init()
	file_hypurr_wallet_proto_init()
	file_hypurr_launch_proto_init()
	file_hypurr_pairs_proto_init()
	file_hypurr_cabal_proto_init()
	file_hypurr_evm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hypurr_static_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenHoldersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenHoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidDeployAuctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidDeployAuctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidSpotPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidSpotPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidSpotPairsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidSpotPairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidPerpPairsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidPerpPairsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidWalletDeploySessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidWalletDeploySessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*SetHyperliquidWalletDeploySessionTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*SetHyperliquidWalletDeploySessionTargetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHyperliquidWalletDeploySessionTargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHyperliquidWalletDeploySessionTargetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchFillsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchFillsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchCandlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchCandlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchMessagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchHoldersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidLaunchHoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*LatestHyperliquidLaunchFillsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidWalletPerformanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidWalletPerformanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalPerformanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_static_service_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*HypurrFunCabalPerformanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hypurr_static_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hypurr_static_service_proto_goTypes,
		DependencyIndexes: file_hypurr_static_service_proto_depIdxs,
		MessageInfos:      file_hypurr_static_service_proto_msgTypes,
	}.Build()
	File_hypurr_static_service_proto = out.File
	file_hypurr_static_service_proto_rawDesc = nil
	file_hypurr_static_service_proto_goTypes = nil
	file_hypurr_static_service_proto_depIdxs = nil
}
