// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: hypurr/token.proto

package hypurr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HyperliquidToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Index             int64                       `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	SzDecimals        int64                       `protobuf:"varint,4,opt,name=sz_decimals,json=szDecimals,proto3" json:"sz_decimals,omitempty"`
	WeiDecimals       int64                       `protobuf:"varint,5,opt,name=wei_decimals,json=weiDecimals,proto3" json:"wei_decimals,omitempty"`
	TokenId           string                      `protobuf:"bytes,6,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	CirculatingSupply float64                     `protobuf:"fixed64,7,opt,name=circulating_supply,json=circulatingSupply,proto3" json:"circulating_supply,omitempty"`
	DeployInfo        *HyperliquidTokenDeployInfo `protobuf:"bytes,8,opt,name=deploy_info,json=deployInfo,proto3" json:"deploy_info,omitempty"`
	Geneses           []*HyperliquidTokenGenesis  `protobuf:"bytes,9,rep,name=geneses,proto3" json:"geneses,omitempty"`
	HlqBalance        float64                     `protobuf:"fixed64,10,opt,name=hlq_balance,json=hlqBalance,proto3" json:"hlq_balance,omitempty"`
	FullName          string                      `protobuf:"bytes,11,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Statistics        *HyperliquidTokenStatistics `protobuf:"bytes,12,opt,name=statistics,proto3" json:"statistics,omitempty"`
}

func (x *HyperliquidToken) Reset() {
	*x = HyperliquidToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidToken) ProtoMessage() {}

func (x *HyperliquidToken) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidToken.ProtoReflect.Descriptor instead.
func (*HyperliquidToken) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{0}
}

func (x *HyperliquidToken) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HyperliquidToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HyperliquidToken) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *HyperliquidToken) GetSzDecimals() int64 {
	if x != nil {
		return x.SzDecimals
	}
	return 0
}

func (x *HyperliquidToken) GetWeiDecimals() int64 {
	if x != nil {
		return x.WeiDecimals
	}
	return 0
}

func (x *HyperliquidToken) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *HyperliquidToken) GetCirculatingSupply() float64 {
	if x != nil {
		return x.CirculatingSupply
	}
	return 0
}

func (x *HyperliquidToken) GetDeployInfo() *HyperliquidTokenDeployInfo {
	if x != nil {
		return x.DeployInfo
	}
	return nil
}

func (x *HyperliquidToken) GetGeneses() []*HyperliquidTokenGenesis {
	if x != nil {
		return x.Geneses
	}
	return nil
}

func (x *HyperliquidToken) GetHlqBalance() float64 {
	if x != nil {
		return x.HlqBalance
	}
	return 0
}

func (x *HyperliquidToken) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *HyperliquidToken) GetStatistics() *HyperliquidTokenStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type HyperliquidTokenHolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Address string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Type    string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *HyperliquidTokenHolder) Reset() {
	*x = HyperliquidTokenHolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenHolder) ProtoMessage() {}

func (x *HyperliquidTokenHolder) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenHolder.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenHolder) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{1}
}

func (x *HyperliquidTokenHolder) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *HyperliquidTokenHolder) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *HyperliquidTokenHolder) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type HyperliquidTokenStatistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId                  int64   `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	HolderCount              int64   `protobuf:"varint,2,opt,name=holder_count,json=holderCount,proto3" json:"holder_count,omitempty"`
	ConcentrationCoefficient float64 `protobuf:"fixed64,3,opt,name=concentration_coefficient,json=concentrationCoefficient,proto3" json:"concentration_coefficient,omitempty"`
}

func (x *HyperliquidTokenStatistics) Reset() {
	*x = HyperliquidTokenStatistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenStatistics) ProtoMessage() {}

func (x *HyperliquidTokenStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenStatistics.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenStatistics) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{2}
}

func (x *HyperliquidTokenStatistics) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *HyperliquidTokenStatistics) GetHolderCount() int64 {
	if x != nil {
		return x.HolderCount
	}
	return 0
}

func (x *HyperliquidTokenStatistics) GetConcentrationCoefficient() float64 {
	if x != nil {
		return x.ConcentrationCoefficient
	}
	return 0
}

type HyperliquidTokenDeployInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId          int64   `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Height           int64   `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Deployer         string  `protobuf:"bytes,3,opt,name=deployer,proto3" json:"deployer,omitempty"`
	RegisterTx       string  `protobuf:"bytes,4,opt,name=register_tx,json=registerTx,proto3" json:"register_tx,omitempty"`
	RegisterSpotTx   string  `protobuf:"bytes,5,opt,name=register_spot_tx,json=registerSpotTx,proto3" json:"register_spot_tx,omitempty"`
	GenesisTx        string  `protobuf:"bytes,6,opt,name=genesis_tx,json=genesisTx,proto3" json:"genesis_tx,omitempty"`
	HyperliquidityTx string  `protobuf:"bytes,7,opt,name=hyperliquidity_tx,json=hyperliquidityTx,proto3" json:"hyperliquidity_tx,omitempty"`
	Hip2Price        float64 `protobuf:"fixed64,8,opt,name=hip2_price,json=hip2Price,proto3" json:"hip2_price,omitempty"`
	Hip2OrderCount   int32   `protobuf:"varint,9,opt,name=hip2_order_count,json=hip2OrderCount,proto3" json:"hip2_order_count,omitempty"`
	Hip2OrderSize    float64 `protobuf:"fixed64,10,opt,name=hip2_order_size,json=hip2OrderSize,proto3" json:"hip2_order_size,omitempty"`
}

func (x *HyperliquidTokenDeployInfo) Reset() {
	*x = HyperliquidTokenDeployInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenDeployInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenDeployInfo) ProtoMessage() {}

func (x *HyperliquidTokenDeployInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenDeployInfo.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenDeployInfo) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{3}
}

func (x *HyperliquidTokenDeployInfo) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *HyperliquidTokenDeployInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *HyperliquidTokenDeployInfo) GetDeployer() string {
	if x != nil {
		return x.Deployer
	}
	return ""
}

func (x *HyperliquidTokenDeployInfo) GetRegisterTx() string {
	if x != nil {
		return x.RegisterTx
	}
	return ""
}

func (x *HyperliquidTokenDeployInfo) GetRegisterSpotTx() string {
	if x != nil {
		return x.RegisterSpotTx
	}
	return ""
}

func (x *HyperliquidTokenDeployInfo) GetGenesisTx() string {
	if x != nil {
		return x.GenesisTx
	}
	return ""
}

func (x *HyperliquidTokenDeployInfo) GetHyperliquidityTx() string {
	if x != nil {
		return x.HyperliquidityTx
	}
	return ""
}

func (x *HyperliquidTokenDeployInfo) GetHip2Price() float64 {
	if x != nil {
		return x.Hip2Price
	}
	return 0
}

func (x *HyperliquidTokenDeployInfo) GetHip2OrderCount() int32 {
	if x != nil {
		return x.Hip2OrderCount
	}
	return 0
}

func (x *HyperliquidTokenDeployInfo) GetHip2OrderSize() float64 {
	if x != nil {
		return x.Hip2OrderSize
	}
	return 0
}

type HyperliquidTokenGenesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId       int64                  `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TargetTokenId *wrapperspb.Int64Value `protobuf:"bytes,5,opt,name=target_token_id,json=targetTokenId,proto3" json:"target_token_id,omitempty"`
}

func (x *HyperliquidTokenGenesis) Reset() {
	*x = HyperliquidTokenGenesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenGenesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenGenesis) ProtoMessage() {}

func (x *HyperliquidTokenGenesis) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenGenesis.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenGenesis) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{4}
}

func (x *HyperliquidTokenGenesis) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *HyperliquidTokenGenesis) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *HyperliquidTokenGenesis) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *HyperliquidTokenGenesis) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HyperliquidTokenGenesis) GetTargetTokenId() *wrapperspb.Int64Value {
	if x != nil {
		return x.TargetTokenId
	}
	return nil
}

type HyperliquidDeployAuction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime  int64                   `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration   int64                   `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	StartGas   float64                 `protobuf:"fixed64,3,opt,name=start_gas,json=startGas,proto3" json:"start_gas,omitempty"`
	CurrentGas *wrapperspb.DoubleValue `protobuf:"bytes,4,opt,name=current_gas,json=currentGas,proto3" json:"current_gas,omitempty"`
	EndGas     *wrapperspb.DoubleValue `protobuf:"bytes,5,opt,name=end_gas,json=endGas,proto3" json:"end_gas,omitempty"`
}

func (x *HyperliquidDeployAuction) Reset() {
	*x = HyperliquidDeployAuction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidDeployAuction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidDeployAuction) ProtoMessage() {}

func (x *HyperliquidDeployAuction) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidDeployAuction.ProtoReflect.Descriptor instead.
func (*HyperliquidDeployAuction) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{5}
}

func (x *HyperliquidDeployAuction) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *HyperliquidDeployAuction) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *HyperliquidDeployAuction) GetStartGas() float64 {
	if x != nil {
		return x.StartGas
	}
	return 0
}

func (x *HyperliquidDeployAuction) GetCurrentGas() *wrapperspb.DoubleValue {
	if x != nil {
		return x.CurrentGas
	}
	return nil
}

func (x *HyperliquidDeployAuction) GetEndGas() *wrapperspb.DoubleValue {
	if x != nil {
		return x.EndGas
	}
	return nil
}

type HyperliquidTokenMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp  int64               `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TokenId    int64               `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	TelegramId int64               `protobuf:"varint,4,opt,name=telegram_id,json=telegramId,proto3" json:"telegram_id,omitempty"`
	Author     *TelegramUserPublic `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	ChatId     int64               `protobuf:"varint,6,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	TopicId    int64               `protobuf:"varint,7,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Message    string              `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HyperliquidTokenMessage) Reset() {
	*x = HyperliquidTokenMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_token_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidTokenMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidTokenMessage) ProtoMessage() {}

func (x *HyperliquidTokenMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_token_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidTokenMessage.ProtoReflect.Descriptor instead.
func (*HyperliquidTokenMessage) Descriptor() ([]byte, []int) {
	return file_hypurr_token_proto_rawDescGZIP(), []int{6}
}

func (x *HyperliquidTokenMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HyperliquidTokenMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HyperliquidTokenMessage) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *HyperliquidTokenMessage) GetTelegramId() int64 {
	if x != nil {
		return x.TelegramId
	}
	return 0
}

func (x *HyperliquidTokenMessage) GetAuthor() *TelegramUserPublic {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *HyperliquidTokenMessage) GetChatId() int64 {
	if x != nil {
		return x.ChatId
	}
	return 0
}

func (x *HyperliquidTokenMessage) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *HyperliquidTokenMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_hypurr_token_proto protoreflect.FileDescriptor

var file_hypurr_token_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x68, 0x79,
	0x70, 0x75, 0x72, 0x72, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xdc, 0x03, 0x0a, 0x10, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x7a, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x7a, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x65, 0x69, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x65, 0x69, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x63, 0x69, 0x72,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x43,
	0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x65, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x68, 0x6c, 0x71, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x68, 0x6c, 0x71, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x22, 0x60, 0x0a, 0x16, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3b, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xf3, 0x02, 0x0a,
	0x1a, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x74, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x70, 0x6f, 0x74, 0x54, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x5f, 0x74, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x73,
	0x69, 0x73, 0x54, 0x78, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71,
	0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x54,
	0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x70, 0x32, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x68, 0x69, 0x70, 0x32, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x68, 0x69, 0x70, 0x32, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x69, 0x70, 0x32,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x69,
	0x70, 0x32, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x68, 0x69, 0x70, 0x32, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x17, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a,
	0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x18, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x41, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x47, 0x61, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x47, 0x61, 0x73, 0x22, 0x85, 0x02,
	0x0a, 0x17, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72,
	0x72, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hypurr_token_proto_rawDescOnce sync.Once
	file_hypurr_token_proto_rawDescData = file_hypurr_token_proto_rawDesc
)

func file_hypurr_token_proto_rawDescGZIP() []byte {
	file_hypurr_token_proto_rawDescOnce.Do(func() {
		file_hypurr_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_hypurr_token_proto_rawDescData)
	})
	return file_hypurr_token_proto_rawDescData
}

var file_hypurr_token_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_hypurr_token_proto_goTypes = []any{
	(*HyperliquidToken)(nil),           // 0: hypurr.HyperliquidToken
	(*HyperliquidTokenHolder)(nil),     // 1: hypurr.HyperliquidTokenHolder
	(*HyperliquidTokenStatistics)(nil), // 2: hypurr.HyperliquidTokenStatistics
	(*HyperliquidTokenDeployInfo)(nil), // 3: hypurr.HyperliquidTokenDeployInfo
	(*HyperliquidTokenGenesis)(nil),    // 4: hypurr.HyperliquidTokenGenesis
	(*HyperliquidDeployAuction)(nil),   // 5: hypurr.HyperliquidDeployAuction
	(*HyperliquidTokenMessage)(nil),    // 6: hypurr.HyperliquidTokenMessage
	(*wrapperspb.Int64Value)(nil),      // 7: google.protobuf.Int64Value
	(*wrapperspb.DoubleValue)(nil),     // 8: google.protobuf.DoubleValue
	(*TelegramUserPublic)(nil),         // 9: hypurr.TelegramUserPublic
}
var file_hypurr_token_proto_depIdxs = []int32{
	3, // 0: hypurr.HyperliquidToken.deploy_info:type_name -> hypurr.HyperliquidTokenDeployInfo
	4, // 1: hypurr.HyperliquidToken.geneses:type_name -> hypurr.HyperliquidTokenGenesis
	2, // 2: hypurr.HyperliquidToken.statistics:type_name -> hypurr.HyperliquidTokenStatistics
	7, // 3: hypurr.HyperliquidTokenGenesis.target_token_id:type_name -> google.protobuf.Int64Value
	8, // 4: hypurr.HyperliquidDeployAuction.current_gas:type_name -> google.protobuf.DoubleValue
	8, // 5: hypurr.HyperliquidDeployAuction.end_gas:type_name -> google.protobuf.DoubleValue
	9, // 6: hypurr.HyperliquidTokenMessage.author:type_name -> hypurr.TelegramUserPublic
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_hypurr_token_proto_init() }
func file_hypurr_token_proto_init() {
	if File_hypurr_token_proto != nil {
		return
	}
	file_hypurr_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hypurr_token_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_token_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenHolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_token_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenStatistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_token_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenDeployInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_token_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenGenesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_token_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidDeployAuction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_token_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidTokenMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hypurr_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hypurr_token_proto_goTypes,
		DependencyIndexes: file_hypurr_token_proto_depIdxs,
		MessageInfos:      file_hypurr_token_proto_msgTypes,
	}.Build()
	File_hypurr_token_proto = out.File
	file_hypurr_token_proto_rawDesc = nil
	file_hypurr_token_proto_goTypes = nil
	file_hypurr_token_proto_depIdxs = nil
}
