// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: hypurr/pairs.proto

package hypurr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HyperliquidSpotPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BaseId         int64             `protobuf:"varint,3,opt,name=base_id,json=baseId,proto3" json:"base_id,omitempty"`
	Base           *HyperliquidToken `protobuf:"bytes,4,opt,name=base,proto3" json:"base,omitempty"`
	QuoteId        int64             `protobuf:"varint,5,opt,name=quote_id,json=quoteId,proto3" json:"quote_id,omitempty"`
	Quote          *HyperliquidToken `protobuf:"bytes,6,opt,name=quote,proto3" json:"quote,omitempty"`
	Index          int64             `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	MidPrice       float64           `protobuf:"fixed64,8,opt,name=mid_price,json=midPrice,proto3" json:"mid_price,omitempty"`
	MarkPrice      float64           `protobuf:"fixed64,9,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	DailyNtlVolume float64           `protobuf:"fixed64,10,opt,name=daily_ntl_volume,json=dailyNtlVolume,proto3" json:"daily_ntl_volume,omitempty"`
	PreviousDayPx  float64           `protobuf:"fixed64,11,opt,name=previous_day_px,json=previousDayPx,proto3" json:"previous_day_px,omitempty"`
}

func (x *HyperliquidSpotPair) Reset() {
	*x = HyperliquidSpotPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_pairs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidSpotPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidSpotPair) ProtoMessage() {}

func (x *HyperliquidSpotPair) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_pairs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidSpotPair.ProtoReflect.Descriptor instead.
func (*HyperliquidSpotPair) Descriptor() ([]byte, []int) {
	return file_hypurr_pairs_proto_rawDescGZIP(), []int{0}
}

func (x *HyperliquidSpotPair) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HyperliquidSpotPair) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HyperliquidSpotPair) GetBaseId() int64 {
	if x != nil {
		return x.BaseId
	}
	return 0
}

func (x *HyperliquidSpotPair) GetBase() *HyperliquidToken {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *HyperliquidSpotPair) GetQuoteId() int64 {
	if x != nil {
		return x.QuoteId
	}
	return 0
}

func (x *HyperliquidSpotPair) GetQuote() *HyperliquidToken {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *HyperliquidSpotPair) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *HyperliquidSpotPair) GetMidPrice() float64 {
	if x != nil {
		return x.MidPrice
	}
	return 0
}

func (x *HyperliquidSpotPair) GetMarkPrice() float64 {
	if x != nil {
		return x.MarkPrice
	}
	return 0
}

func (x *HyperliquidSpotPair) GetDailyNtlVolume() float64 {
	if x != nil {
		return x.DailyNtlVolume
	}
	return 0
}

func (x *HyperliquidSpotPair) GetPreviousDayPx() float64 {
	if x != nil {
		return x.PreviousDayPx
	}
	return 0
}

type HyperliquidPerpPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Index          int64   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	MidPrice       float64 `protobuf:"fixed64,4,opt,name=mid_price,json=midPrice,proto3" json:"mid_price,omitempty"`
	MarkPrice      float64 `protobuf:"fixed64,5,opt,name=mark_price,json=markPrice,proto3" json:"mark_price,omitempty"`
	DailyNtlVolume float64 `protobuf:"fixed64,6,opt,name=daily_ntl_volume,json=dailyNtlVolume,proto3" json:"daily_ntl_volume,omitempty"`
	PreviousDayPx  float64 `protobuf:"fixed64,7,opt,name=previous_day_px,json=previousDayPx,proto3" json:"previous_day_px,omitempty"`
	Funding        float64 `protobuf:"fixed64,8,opt,name=funding,proto3" json:"funding,omitempty"`
	OpenInterest   float64 `protobuf:"fixed64,9,opt,name=open_interest,json=openInterest,proto3" json:"open_interest,omitempty"`
	Premium        float64 `protobuf:"fixed64,10,opt,name=premium,proto3" json:"premium,omitempty"`
}

func (x *HyperliquidPerpPair) Reset() {
	*x = HyperliquidPerpPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hypurr_pairs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyperliquidPerpPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyperliquidPerpPair) ProtoMessage() {}

func (x *HyperliquidPerpPair) ProtoReflect() protoreflect.Message {
	mi := &file_hypurr_pairs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyperliquidPerpPair.ProtoReflect.Descriptor instead.
func (*HyperliquidPerpPair) Descriptor() ([]byte, []int) {
	return file_hypurr_pairs_proto_rawDescGZIP(), []int{1}
}

func (x *HyperliquidPerpPair) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HyperliquidPerpPair) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HyperliquidPerpPair) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *HyperliquidPerpPair) GetMidPrice() float64 {
	if x != nil {
		return x.MidPrice
	}
	return 0
}

func (x *HyperliquidPerpPair) GetMarkPrice() float64 {
	if x != nil {
		return x.MarkPrice
	}
	return 0
}

func (x *HyperliquidPerpPair) GetDailyNtlVolume() float64 {
	if x != nil {
		return x.DailyNtlVolume
	}
	return 0
}

func (x *HyperliquidPerpPair) GetPreviousDayPx() float64 {
	if x != nil {
		return x.PreviousDayPx
	}
	return 0
}

func (x *HyperliquidPerpPair) GetFunding() float64 {
	if x != nil {
		return x.Funding
	}
	return 0
}

func (x *HyperliquidPerpPair) GetOpenInterest() float64 {
	if x != nil {
		return x.OpenInterest
	}
	return 0
}

func (x *HyperliquidPerpPair) GetPremium() float64 {
	if x != nil {
		return x.Premium
	}
	return 0
}

var File_hypurr_pairs_proto protoreflect.FileDescriptor

var file_hypurr_pairs_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x1a, 0x12, 0x68, 0x79,
	0x70, 0x75, 0x72, 0x72, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xef, 0x02, 0x0a, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x53, 0x70, 0x6f, 0x74, 0x50, 0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70,
	0x65, 0x72, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2e, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x74, 0x6c, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x4e, 0x74, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x70, 0x78, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x61, 0x79,
	0x50, 0x78, 0x22, 0xb6, 0x02, 0x0a, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x50, 0x65, 0x72, 0x70, 0x50, 0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6e, 0x74, 0x6c, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x4e, 0x74, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x70, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x61, 0x79,
	0x50, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x42, 0x29, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72,
	0x2f, 0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x6f, 0x2f,
	0x68, 0x79, 0x70, 0x75, 0x72, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hypurr_pairs_proto_rawDescOnce sync.Once
	file_hypurr_pairs_proto_rawDescData = file_hypurr_pairs_proto_rawDesc
)

func file_hypurr_pairs_proto_rawDescGZIP() []byte {
	file_hypurr_pairs_proto_rawDescOnce.Do(func() {
		file_hypurr_pairs_proto_rawDescData = protoimpl.X.CompressGZIP(file_hypurr_pairs_proto_rawDescData)
	})
	return file_hypurr_pairs_proto_rawDescData
}

var file_hypurr_pairs_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_hypurr_pairs_proto_goTypes = []any{
	(*HyperliquidSpotPair)(nil), // 0: hypurr.HyperliquidSpotPair
	(*HyperliquidPerpPair)(nil), // 1: hypurr.HyperliquidPerpPair
	(*HyperliquidToken)(nil),    // 2: hypurr.HyperliquidToken
}
var file_hypurr_pairs_proto_depIdxs = []int32{
	2, // 0: hypurr.HyperliquidSpotPair.base:type_name -> hypurr.HyperliquidToken
	2, // 1: hypurr.HyperliquidSpotPair.quote:type_name -> hypurr.HyperliquidToken
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_hypurr_pairs_proto_init() }
func file_hypurr_pairs_proto_init() {
	if File_hypurr_pairs_proto != nil {
		return
	}
	file_hypurr_token_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hypurr_pairs_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidSpotPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hypurr_pairs_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HyperliquidPerpPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hypurr_pairs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hypurr_pairs_proto_goTypes,
		DependencyIndexes: file_hypurr_pairs_proto_depIdxs,
		MessageInfos:      file_hypurr_pairs_proto_msgTypes,
	}.Build()
	File_hypurr_pairs_proto = out.File
	file_hypurr_pairs_proto_rawDesc = nil
	file_hypurr_pairs_proto_goTypes = nil
	file_hypurr_pairs_proto_depIdxs = nil
}
